openapi: 3.0.3
info:
  title: Fiddler API - 2.0
  description: APIs to interact with Fiddler
  termsOfService: https://fiddler.ai/about/terms
  contact:
    email: support@fiddler.ai
  license:
    name: Proprietary
    url: '2.0'
  version: '2.0'
externalDocs:
  url: https://docs.fiddler.ai
  description: Find out more about Fiddler
servers:
- url: https://{build_name}.dev.fiddler.ai
  description: Development API Server
  variables:
    build_name:
      default: mainbuild
- url: https://{build_name}.fiddler.ai
  description: Preprod API Server
  variables:
    build_name:
      enum:
      - preprod
      - trial
      default: preprod
security:
- BearerAuth: []
paths:
  /v3/traces/{model_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - traces-spans-v3
      summary: List of traces from authorized projects
      description: List of traces from authorized projects
      operationId: getTracesV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/start_time_optional'
      - $ref: '#/components/parameters/end_time_optional'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of traces
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ListTracesResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/traces/{model_id}/{trace_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - traces-spans-v3
      summary: Details of a Trace
      description: Details of a Trace
      operationId: getTraceV3
      parameters:
      - $ref: '#/components/parameters/trace_id'
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Details of a Trace
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Trace'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/spans/{model_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - traces-spans-v3
      summary: List of spans from authorized projects
      description: List of spans from authorized projects
      operationId: getSpansV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/start_time_optional'
      - $ref: '#/components/parameters/end_time_optional'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of spans
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ListSpansResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/spans/{model_id}/{span_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - traces-spans-v3
      summary: Details of a Span
      description: Details of a Span
      operationId: getSpanV3
      parameters:
      - $ref: '#/components/parameters/span_id'
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Details of a Span
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Span'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/segments:
    x-fiddler-api-version: v3
    get:
      tags:
      - segments-v3
      summary: List all segments
      description: List all segments
      operationId: getSegmentsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of all segments
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/Segment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - segments-v3
      summary: Create new segment
      description: Create new segment
      operationId: createSegmentV3
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateSegmentRequest'
      responses:
        '200':
          description: Segment successfully created
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/Segment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/segments/{uuid}:
    x-fiddler-api-version: v3
    get:
      tags:
      - segments-v3
      summary: Detail info of a segment
      description: Detail info of a segment
      operationId: getSegmentV3
      parameters:
      - $ref: '#/components/parameters/uuid_path'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/Segment'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    delete:
      tags:
      - segments-v3
      summary: Delete segment by uuid
      description: Delete segment by uuid
      operationId: deleteSegmentV3
      parameters:
      - $ref: '#/components/parameters/uuid_path'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/segments:
    x-fiddler-api-version: v3
    get:
      tags:
      - segments-v3
      summary: List all segments for a model
      description: List all segments for a model
      operationId: getModelSegmentsV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of all segments for a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/Segment'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/auth/strategies:
    x-fiddler-api-version: v3
    get:
      tags:
      - auth
      summary: Returns the list of authentication strategies available in the system.
      description: This endpoint returns the list of authentication strategies available
        in the system. There are two authentication strategies available in the system
        - (1) Credentials based (2) SSO Based. For any given system, we support a
        combination of these strategies. SSO (sign up and sign in) is disabled by
        default.
      operationId: getAuthStrategies
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AuthStrategiesResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/events:
    x-fiddler-api-version: v3
    post:
      tags:
      - ingestion-v3
      summary: Publish events to Fiddler Platform
      description: Publish events to Fiddler Platform
      operationId: publishEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishEventsRequest'
      responses:
        '200':
          description: Events uploaded
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/PublishEventsResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    delete:
      tags:
      - ingestion-v3
      summary: Delete events in Fiddler Platform
      description: Delete events in Fiddler Platform
      operationId: deleteEventsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteEventsRequest'
      responses:
        '202':
          description: Events Deletion request received
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/DeleteEventsResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    patch:
      tags:
      - ingestion-v3
      summary: Publish update events to Fiddler Platform
      description: Publish update events to Fiddler Platform
      operationId: publishEventsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublishEventsRequest'
      responses:
        '200':
          description: Events uploaded
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/PublishEventsResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/environments:
    x-fiddler-api-version: v3
    get:
      tags:
      - environment-v3
      summary: List Environments
      description: Retrieve a list of environments from authorized projects.
      operationId: getEnvironments
      parameters:
      - $ref: '#/components/parameters/type'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of environments from authorized projects
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Environments'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/environments/{env_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - environment-v3
      summary: Get environment of a model
      description: Retrieve details of a specific environment associated with a model.
      operationId: getEnvironment
      parameters:
      - $ref: '#/components/parameters/env_id'
      responses:
        '200':
          description: Details of the environment associated with the specified ID
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Environment'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/environments:
    x-fiddler-api-version: v3
    get:
      tags:
      - environment-v3
      summary: List of environments of a model
      description: Retrieve a list of environments associated with a specific model.
      operationId: getModelEnvironments
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/type'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of environments associated with the specified model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Environments'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/jobs/{job_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - jobs-v3
      summary: Get async job details for a job id
      description: Get async job details for a job id
      operationId: getJobV3
      parameters:
      - $ref: '#/components/parameters/job_id'
      - $ref: '#/components/parameters/verbose'
      responses:
        '200':
          description: Success, Details of a job
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Job'
              examples:
                Example 1:
                  $ref: '#/components/examples/JobGet_Ex_1'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/jobs:
    x-fiddler-api-version: v3
    get:
      tags:
      - jobs-v3
      summary: Get details of all background/async jobs
      description: Get details of all background/async jobs
      operationId: getJobsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: Success, Details of all background/async jobs
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Jobs'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/jobs/real-time:
    x-fiddler-api-version: v3
    get:
      tags:
      - jobs-v3
      summary: Get real time info of all background/async jobs
      description: Get real time info of all background/async jobs
      operationId: getJobsRealTimeV3
      responses:
        '200':
          description: Success, Details of real time info of jobs
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        jobs:
                          type: array
                          items:
                            $ref: '#/components/schemas/InProgressJob'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/teams:
    x-fiddler-api-version: v3
    get:
      tags:
      - team-v3
      summary: List teams
      description: List teams
      operationId: getTeamsV3
      parameters:
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of team details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Teams'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - team-v3
      summary: Create new team
      description: Create new team
      operationId: createTeamV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRequest'
      responses:
        '200':
          description: Created team details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/teams/{team_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - team-v3
      summary: Detail info of a team
      description: Detail info of a team
      operationId: getTeamV3
      parameters:
      - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: Team details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Team'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    delete:
      tags:
      - team-v3
      summary: Delete the team
      description: Delete the team
      operationId: deleteTeamV3
      parameters:
      - $ref: '#/components/parameters/team_id'
      responses:
        '200':
          description: Delete team
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/configurations:
    x-fiddler-api-version: v3
    get:
      tags:
      - configuration-v3
      summary: List of configurations
      description: List of configurations
      operationId: getConfigurationsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of configurations
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ListConfigurationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - configuration-v3
      summary: Add a new configuration
      description: Add a new configuration
      operationId: addConfigurationV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddConfigurationRequestBody'
      responses:
        '200':
          description: successful configuration added
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ConfigurationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/configurations/{configuration_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - configuration-v3
      summary: Details of a configuration
      description: Details of a configuration
      operationId: getConfigurationV3
      parameters:
      - $ref: '#/components/parameters/configuration_id'
      responses:
        '200':
          description: Get configuration details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ConfigurationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    delete:
      tags:
      - configuration-v3
      summary: Delete configuration
      description: Delete configuration
      operationId: deleteConfigurationV3
      parameters:
      - $ref: '#/components/parameters/configuration_id'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    patch:
      tags:
      - configuration-v3
      summary: Updating the Configuration details
      description: Updating the Configuration details
      operationId: updateConfigurationV3
      parameters:
      - $ref: '#/components/parameters/configuration_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateConfigurationRequestBody'
      responses:
        '200':
          description: Updated the configuration details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ConfigurationResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/dimensionality-reduction/{model_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - dimensionality-reduction-v3
      description: Get model dimensionality reduction info
      operationId: getModelDimensionalityReductionInfoV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Get model dimensionality reduction info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDimensionalityReductionInfo'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - dimensionality-reduction-v3
      description: Get vector visualization data
      operationId: getDimensionalityReductionV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDimensionalityReduction'
      responses:
        '200':
          description: Get dimensionality reduction data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/QueryDimensionalityReductionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/team-roles:
    x-fiddler-api-version: v3
    post:
      tags:
      - team-roles-v3
      summary: Create team role
      description: Create team role to a team
      operationId: createTeamRoleV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamRoleRequest'
      responses:
        '200':
          description: Created and get team roles details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/TeamRole'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/team-roles/{team_role_id}:
    x-fiddler-api-version: v3
    delete:
      tags:
      - team-roles-v3
      summary: Delete team role
      description: Delete team role to a team
      operationId: deleteTeamRoleV3
      parameters:
      - $ref: '#/components/parameters/team_role_id'
      responses:
        '200':
          description: Delete team role
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/custom-metrics:
    x-fiddler-api-version: v3
    get:
      tags:
      - custom-metrics-v3
      summary: List all custom metrics
      description: List all custom metrics
      operationId: getCustomMetricsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of all custom metrics
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/CustomMetric'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - custom-metrics-v3
      summary: Create new custom metric
      description: Create new custom metric
      operationId: createCustomMetricV3
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/CreateCustomMetricRequest'
      responses:
        '200':
          description: Custom metric successfully created
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/CustomMetric'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/custom-metrics/{uuid}:
    x-fiddler-api-version: v3
    get:
      tags:
      - custom-metrics-v3
      summary: Detail info of a custom metric
      description: Detail info of a custom metric
      operationId: getCustomMetricV3
      parameters:
      - $ref: '#/components/parameters/uuid_path'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/CustomMetric'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    delete:
      tags:
      - custom-metrics-v3
      summary: Delete custom metric by uuid
      description: Delete custom metric by uuid
      operationId: deleteCustomMetricV3
      parameters:
      - $ref: '#/components/parameters/uuid_path'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/custom-metrics:
    x-fiddler-api-version: v3
    get:
      tags:
      - custom-metrics-v3
      summary: List all custom metrics for a model
      description: List all custom metrics for a model
      operationId: getModelCustomMetricsV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of all custom metrics for a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/CustomMetric'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/baselines:
    x-fiddler-api-version: v3
    get:
      tags:
      - baseline-v3
      summary: List of baselines based on user permissions and filters
      description: List of baselines based on user permissions and filters
      operationId: getBaselinesV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of baselines
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Baselines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - baseline-v3
      summary: add baseline to a model
      description: Adds a baseline to a model
      operationId: addBaselineV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBaselineRequestBody'
      responses:
        '200':
          description: successful baseline creation
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Baseline'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/baselines/{baseline_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - baseline-v3
      summary: Get baseline details
      description: Get baseline details
      operationId: getBaselineV3
      parameters:
      - $ref: '#/components/parameters/baseline_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Baseline'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    delete:
      tags:
      - baseline-v3
      summary: Delete baseline from a model
      description: Delete baseline from a model
      operationId: deleteBaselineV3
      parameters:
      - $ref: '#/components/parameters/baseline_id'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/baselines:
    x-fiddler-api-version: v3
    get:
      tags:
      - baseline-v3
      summary: List of baselines of a model
      description: List of baselines of a model
      operationId: getModelBaselinesV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of baselines of a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Baselines'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/access-keys:
    x-fiddler-api-version: v3
    get:
      tags:
      - access-key
      summary: All access keys present in the system.
      description: An administrator can see all the keys, while a member will only
        see their key.
      operationId: getAccessKeys
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/AccessKeyListResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - access-key
      description: Create access key for a user
      operationId: createAccessKey
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccessKeyRequestBody'
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AccessKeySingleResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: true
  /v3/access-keys/revoke:
    x-fiddler-api-version: v3
    post:
      tags:
      - access-key
      description: Revokes access key for a user.
      operationId: revokeAccessKey
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccessKeyRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: true
  /v3/access-keys/refresh:
    x-fiddler-api-version: v3
    post:
      tags:
      - access-key
      description: Refreshes the access key for a user. It deletes existing key and
        creates a new key.
      operationId: refreshAccessKey
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AccessKeyRequestBody'
      responses:
        '200':
          description: Successful completion
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AccessKeySingleResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: true
  /v3/models/{model_id}/metrics:
    x-fiddler-api-version: v3
    get:
      tags:
      - metrics-v3
      description: Get available metrics of a model
      operationId: getModelMetricsV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Details of available model metrics
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelMetricsDetailsResponse'
              examples:
                Successful Response:
                  $ref: '#/components/examples/ModelMetricsDetails'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/version-compatibility:
    x-fiddler-api-version: v3
    get:
      tags:
      - version-compatibility-v3
      summary: Check version compatibility
      description: Check version compatibility between server and fiddler-client
      operationId: getVersionCompatibilityV3
      parameters:
      - $ref: '#/components/parameters/client_version'
      - $ref: '#/components/parameters/client_name'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
      x-fiddler-is-internal: true
  /v3/alert-rules/{alert_id}/records:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: List of all alert records during specified time_bucket_start and time_bucket_end
        for the given alert rule
      description: List of all alert records during specified time_bucket_start and
        time_bucket_end for the given alert rule
      operationId: getAlertRuleRecords
      parameters:
      - $ref: '#/components/parameters/alert_id'
      - $ref: '#/components/parameters/start_time'
      - $ref: '#/components/parameters/end_time'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: List of all alert records in the given time_bucket_start and
            time_bucket_end for the given alert rule
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/AlertRecord'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/alert-rules/{alert_id}/record-history:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: List latest alert record for each time bucket during specified time_bucket_start
        and time_bucket_end for the given alert rule
      description: List latest alert record for each time bucket during specified
        time_bucket_start and time_bucket_end for the given alert rule
      operationId: getAlertRecordHistory
      parameters:
      - $ref: '#/components/parameters/alert_id'
      - $ref: '#/components/parameters/start_time'
      - $ref: '#/components/parameters/end_time'
      responses:
        '200':
          description: List of latest alert record for each time bucket during specified
            time_bucket_start and time_bucket_end for the given alert rule
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/AlertRecordHistory'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/alert-rules/summary:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: List of all alert rule summary in the given time_bucket_start and time_bucket_end
      description: List of all alert rule summary in the given time_bucket_start and
        time_bucket_end
      operationId: getAlertRulesSummary
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/start_time'
      - $ref: '#/components/parameters/end_time'
      responses:
        '200':
          description: Summary of all alert rules in the given time_bucket_start and
            time_bucket_end
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/AlertRuleSummary'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/alert-rules/stats:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: Returns the number of passing, at risk and critical alert rules for
        each metric type
      description: Returns the number of passing, at risk and critical alert rules
        for each metric type
      operationId: getAlertRuleStats
      parameters:
      - $ref: '#/components/parameters/start_time'
      - $ref: '#/components/parameters/end_time'
      - $ref: '#/components/parameters/no_cache_optional'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AlertRuleStats'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/alert-rules:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: Lists all alert rules configured for a model.
      description: Lists all alert rules configured for a model.
      operationId: getAlertRules
      parameters:
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/search'
      responses:
        '200':
          description: Get list of Alert Rules in detail
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          type: array
                          items:
                            $ref: '#/components/schemas/AlertRule'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - alert-rules-v3
      summary: Creates Alert Rules
      description: Creates Alert Rules
      operationId: createAlert
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AlertRulePostPayload'
      responses:
        '200':
          description: successful completion
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AlertRule'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: false
  /v3/alert-rules/{alert_id}/notification:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: Returns notification for the given Alert Rule id
      description: Returns notification for the given Alert Rule id
      operationId: getNotificationForAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      responses:
        '200':
          description: Notification Details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Notification'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - alert-rules-v3
      description: Create Notification for an Alert Rule
      operationId: createNotificationForAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NotificationPayload'
      responses:
        '200':
          description: successful completion
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Notification'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: false
    patch:
      tags:
      - alert-rules-v3
      summary: Update by id
      description: Update Notification by Alert Rule id
      operationId: updateNotificationForAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/NotificationPayload'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/Notification'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '503':
          $ref: '#/components/responses/503'
      x-fiddler-is-internal: false
  /v3/alert-rules/{alert_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - alert-rules-v3
      summary: Returns Alert Rule for the given id
      description: Returns Alert Rule for the given id
      operationId: getAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      responses:
        '200':
          description: Alert Rule details
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AlertRule'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    delete:
      tags:
      - alert-rules-v3
      summary: Deletes an Alert Rule
      description: Deletes an Alert Rule
      operationId: deleteAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    patch:
      tags:
      - alert-rules-v3
      summary: Update by id
      description: Update Alert Rule by id
      operationId: updateAlertRule
      parameters:
      - $ref: '#/components/parameters/alert_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/AlertRuleUpdatableFields'
      responses:
        '200':
          description: Get detail info
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      allOf:
                      - $ref: '#/components/schemas/AlertRule'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/files/upload:
    x-fiddler-api-version: v3
    post:
      tags:
      - file-upload
      summary: Upload file in a single part
      description: Uploads a file in a single part to Fiddler.
      operationId: fileUpload
      requestBody:
        content: {}
      responses:
        '200':
          description: File uploaded successfully.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FileUploadResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/files/multipart-init:
    x-fiddler-api-version: v3
    post:
      tags:
      - file-upload
      summary: Initiate multi-part upload
      description: Initiates a multi-part upload process for a large file to Fiddler.
      operationId: initiateMultiPartUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiPartInitRequest'
      responses:
        '200':
          description: Multi-part upload request initiated successfully.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MultiPartInitResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/files/multipart-upload:
    x-fiddler-api-version: v3
    post:
      tags:
      - file-upload
      summary: Upload file a part of the file
      description: Uploads a part of a large file to Fiddler as part of a multi-part
        upload process.
      operationId: uploadPart
      requestBody:
        content: {}
      responses:
        '200':
          description: File part uploaded successfully.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MultiPartUploadResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/files/multipart-complete:
    x-fiddler-api-version: v3
    post:
      tags:
      - file-upload
      summary: Complete multi-part upload
      description: Completes the multi-part upload process for a large file in Fiddler.
      operationId: completeMultiPartUpload
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MultiPartCompleteRequest'
      responses:
        '200':
          description: Multi-part upload request completed successfully.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MultiPartCompleteResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/monitoring-summary:
    x-fiddler-api-version: v3
    get:
      tags:
      - monitoring-summary-v3
      summary: Get bulk metric(events, triggered alerts) + models
      description: Get bulk metric(events, triggered alerts) + models
      operationId: getMonitoringSummaryV3
      parameters:
      - $ref: '#/components/parameters/start_time_optional'
      - $ref: '#/components/parameters/end_time_optional'
      - $ref: '#/components/parameters/no_cache_optional'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MonitoringSummaryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/histograms:
    x-fiddler-api-version: v3
    post:
      tags:
      - histograms-v3
      summary: Returns bin description and histograms for a selected time_start of
        a certain column
      description: Returns bin description and histograms for a selected time_start
        of a certain column
      operationId: getHistogramsV3
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HistogramRequestPayload'
      responses:
        '200':
          description: Get distribution of drift metrics for requested Columns
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/HistogramObject'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/analytics/correlation-matrix:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get correlation matrix
      description: Get correlation matrix between numerical columns
      operationId: getCorrelationMatrixV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrelationMatrixRequestBody'
      responses:
        '200':
          description: Correlation Matrix ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/CorrelationMatrixResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/analytics/correlation:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get feature correlation
      description: Get feature correlation of two columns
      operationId: getCorrelationV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CorrelationRequestBody'
      responses:
        '200':
          description: Correlation ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        plots:
                          oneOf:
                          - $ref: '#/components/schemas/CorrelationScatterLineResponse'
                          - $ref: '#/components/schemas/CorrelationBoxResponse'
                          - $ref: '#/components/schemas/CorrelationStackedResponse'
        '400':
          $ref: '#/components/responses/400'
      x-fiddler-is-internal: true
  /v3/analytics/distribution:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get feature distribution
      description: Get feature distribution of one feature
      operationId: getDistributionV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureDistributionRequestBody'
      responses:
        '200':
          description: Feature distribution ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        plots:
                          oneOf:
                          - $ref: '#/components/schemas/FeatureDistributionKDEHistResponse'
                          - $ref: '#/components/schemas/FeatureDistributionHistogramResponse'
        '400':
          $ref: '#/components/responses/400'
      x-fiddler-is-internal: true
  /v3/analytics/dependence-plot:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get dependence plots (PDP or ICE plots) for the given dataset, slice
        query, event ID or rows
      description: Get dependence plots (PDP or ICE plots) for the given dataset,
        slice query, event ID or rows
      operationId: getDependencePlotV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DependencePlotRequestBody'
      responses:
        '200':
          description: Dependence Plots ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/DependencePlotResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/slice-query/parse:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Fetch slice query
      description: Parse slice query data
      operationId: parseSliceQueryV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParseSliceQueryRequestBody'
      responses:
        '200':
          description: Successfully parsed slice query
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ParseSliceQueryResponseBody'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/slice-query/fetch:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Fetch slice query
      description: Fetch slice query data
      operationId: fetchSliceQueryV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchSliceQueryRequestBody'
      responses:
        '200':
          description: Slice query data fetch successful
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FetchSliceQueryResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/explain:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get explanations
      description: Get explanations from a model for a given row
      operationId: explainV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExplainRequestBody'
      responses:
        '200':
          description: Explanation ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ExplainResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/analytics/feature-impact:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get feature impact
      description: Get feature impact for the given environment or a slice query
      operationId: featureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureImpactRequestBody'
      responses:
        '200':
          description: Feature Impact ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FeatureImpactResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/feature-importance:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get feature importance
      description: Get feature importance for the given environment or a slice query
      operationId: featureImportanceV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureImportanceRequestBody'
      responses:
        '200':
          description: Feature Importance ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FeatureImportanceResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/scores:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get model scores
      description: Get model scores for the given environment or a slice query
      operationId: scoresV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScoreRequestBody'
      responses:
        '200':
          description: Scoring ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ScoresResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/mutual-info:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get mutual information
      description: Get mutual information with respect to a given column
      operationId: mutualInfoV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MutualInformationRequestBody'
      responses:
        '200':
          description: Mutual Information ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MutualInformationResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/analytics/slice-stats:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get slice statistics
      description: Get slice statistics on the query dataset
      operationId: sliceStatisticsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SliceStatisticsRequestBody'
      responses:
        '200':
          description: Slice Statistics ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/SliceStatisticsResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/slice-query/download:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Download slice query data as parquet file
      description: Download slice query data as parquet file
      operationId: sliceDownloadV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchSliceQueryRequestBody'
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/analytics/precompute-feature-impact:
    x-fiddler-api-version: v3
    put:
      tags:
      - explainability-v3
      summary: Update precomputed feature impact
      description: Compute and update cached feature impact on an environment
      operationId: updatePrecomputeFeatureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputeFeatureImpactRequestBody'
      responses:
        '200':
          description: Feature impact pre-computation update ran successfully on the
            given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
    post:
      tags:
      - explainability-v3
      summary: Precompute feature impact
      description: Compute and cache feature impact on an environment
      operationId: precomputeFeatureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputeFeatureImpactRequestBody'
      responses:
        '200':
          description: Feature impact pre-computation ran successfully on the given
            data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/feature-impact/precomputed:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get precomputed feature impact
      description: Get precomputed feature impact for a model
      operationId: getPrecomputedFeatureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model_id:
                  type: string
                  format: uuid
                  description: Unique identifier for the model.
              required:
              - model_id
      responses:
        '200':
          description: Precomputed Feature impact retrieval ran successfully on the
            given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FeatureImpactResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/precompute-feature-importance:
    x-fiddler-api-version: v3
    put:
      tags:
      - explainability-v3
      summary: Update precomputed feature importance
      description: Compute and update cached feature importance on an environment
      operationId: updatePrecomputeFeatureImportanceV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputeFeatureImportanceRequestBody'
      responses:
        '200':
          description: Feature importance pre-computation update ran successfully
            on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
    post:
      tags:
      - explainability-v3
      summary: Precompute feature importance
      description: Compute and cache feature importance on an environment
      operationId: precomputeFeatureImportanceV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputeFeatureImportanceRequestBody'
      responses:
        '200':
          description: Feature importance pre-computation ran successfully on the
            given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/analytics/feature-importance/precomputed:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Get precomputed feature importance
      description: Get precomputed feature importance for a model
      operationId: getPrecomputedFeatureImportanceV3
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                model_id:
                  type: string
                  format: uuid
                  description: Unique identifier for model.
              required:
              - model_id
      responses:
        '200':
          description: Precomputed Feature importance retrieval ran successfully on
            the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/FeatureImportanceResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: false
  /v3/predict:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      description: Get predictions from a model
      operationId: predictV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PredictRequestBody'
      responses:
        '200':
          description: Predictions ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/PredictResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/analytics/precompute-predictions:
    x-fiddler-api-version: v3
    put:
      tags:
      - explainability-v3
      summary: Update precompute predictions
      description: Compute and update precomputed predictions on an environment
      operationId: updatePrecomputePredictionsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputePredictionsRequestBody'
      responses:
        '200':
          description: Predictions pre-computation update ran successfully on the
            given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
    post:
      tags:
      - explainability-v3
      summary: Precompute predictions
      description: Compute and store predictions on an environment
      operationId: precomputePredictionsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrecomputePredictionsRequestBody'
      responses:
        '200':
          description: Predictions pre-computation ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/analytics/metrics:
    x-fiddler-api-version: v3
    post:
      tags:
      - explainability-v3
      summary: Compute analytic metrics
      description: Compute analytic metrics for a given query
      operationId: analyticMetricsV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalyticMetricsRequestBody'
      responses:
        '200':
          description: Analytics metrics ran successfully on the given data
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/AnalyticMetricsResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/analytics/upload-feature-impact:
    x-fiddler-api-version: v3
    put:
      tags:
      - explainability-v3
      summary: Update customer generated feature impacts for the given model
      description: Update customer generated feature impacts for the given model
      operationId: updateUploadedFeatureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFeatureImpactTabularRequestBody'
      responses:
        '200':
          description: Customer generated feature impacts updated successfully for
            the given model.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/UploadFeatureImpactTabularResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
    post:
      tags:
      - explainability-v3
      summary: Upload customer generated feature impacts to the given model
      description: Upload customer generated feature impacts to the given model
      operationId: userUploadedFeatureImpactV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadFeatureImpactTabularRequestBody'
      responses:
        '200':
          description: Customer generated feature impacts uploaded successfully for
            the given model.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/UploadFeatureImpactTabularResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
      x-fiddler-is-internal: true
  /v3/models/{model_id}/default-dashboard:
    x-fiddler-api-version: v3
    get:
      tags:
      - dashboard-v3
      - model-v3
      summary: Get default dashboard UUID of a model
      description: Get default dashboard UUID of a model
      operationId: getDefaultModelDashboard
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/DefaultDashboard'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    put:
      tags:
      - dashboard-v3
      - model-v3
      summary: Update default dashboard UUID of a model
      description: When a model is created, a new dashboard is created and assigned
        to the model as default. This API can be used to assign a different dashboard
        as default to a model.
      operationId: updateDefaultModelDashboard
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/UpdateDefaultDashboardRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/DefaultDashboard'
        '400':
          $ref: '#/components/responses/400'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/models:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-v3
      summary: List models
      description: Get list of model for provided query and filters
      operationId: getModelsV3
      parameters:
      - $ref: '#/components/parameters/latest_only'
      - $ref: '#/components/parameters/project_id_query'
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of models for provided query and filters
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ListModelResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - model-v3
      summary: Add a new model under a project
      description: Add a new model under a project
      operationId: addModelV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddModelRequestBody'
      responses:
        '200':
          description: Created model JSON response
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDetailResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-v3
      summary: Get details of a model
      description: Details of a model for given model id
      operationId: getModelV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Model JSON response for provided model id
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDetailResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    delete:
      tags:
      - model-v3
      summary: Delete a model
      description: Delete a model
      operationId: deleteModelV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '202':
          description: Details of a model delete job
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/DeleteModelResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    patch:
      tags:
      - model-v3
      summary: Update the fields of a model
      description: Update the fields of a model
      operationId: updateModelV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateModelRequest'
      responses:
        '200':
          description: Updated model JSON response
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDetailResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/model-factory:
    x-fiddler-api-version: v3
    post:
      tags:
      - model-v3
      summary: Generate model from the given data sample
      description: Generate model from the given data sample
      operationId: modelFactory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelFactoryRequest'
      responses:
        '200':
          description: Generated model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelFactoryResponse'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/download-artifact:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-v3
      summary: Download model artifacts
      description: Download artifacts associated with the model
      operationId: downloadArtifactV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: OK
          content: {}
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/models/{model_id}/deploy-artifact:
    x-fiddler-api-version: v3
    put:
      tags:
      - model-v3
      summary: Update artifacts associated with the model
      description: Update artifacts associated with the model
      operationId: deployModelArtifactUpdateV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/deployment_params'
      responses:
        '200':
          description: Updated Model Artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - model-v3
      summary: Upload artifacts associated with the model
      description: Upload artifacts associated with the model
      operationId: deployModelArtifactV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/deployment_params'
      responses:
        '200':
          description: Deployed Model Artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v2/models/{model_id}/deploy-artifact-multi-part-init:
    x-fiddler-api-version: v2
    put:
      tags:
      - model-v3
      summary: Initialize multipart update of artifacts
      description: Initialize multipart update of artifacts
      operationId: deployModelArtifactUpdateMultiInitV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Initialized multipart update of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/UploadIdCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - model-v3
      summary: Initialize multipart upload of artifacts
      description: Initialize multipart upload of artifacts
      operationId: deployModelArtifactMultiInitV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Initialized multipart upload of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/UploadIdCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v2/models/{model_id}/deploy-artifact-multi-part-upload:
    x-fiddler-api-version: v2
    put:
      tags:
      - model-v3
      summary: Multipart update of artifacts
      description: Multipart update of artifacts
      operationId: deployModelArtifactUpdateMultiV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/upload_id'
      - $ref: '#/components/parameters/part_number'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Updated multipart of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/PartCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - model-v3
      summary: Multipart upload of artifacts
      description: Multipart upload of artifacts
      operationId: deployModelArtifactMultiV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/upload_id'
      - $ref: '#/components/parameters/part_number'
      requestBody:
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Uploaded multipart of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/PartCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v2/models/{model_id}/deploy-artifact-multi-part-complete:
    x-fiddler-api-version: v2
    put:
      tags:
      - model-v3
      summary: Complete multipart update of artifacts
      description: Complete multipart update of artifacts
      operationId: deployModelArtifactUpdateMultiCompleteV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/deployment_params'
      - $ref: '#/components/parameters/parts'
      - $ref: '#/components/parameters/upload_id'
      responses:
        '200':
          description: Completed update multipart of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - model-v3
      summary: Complete multipart upload of artifacts
      description: Complete multipart upload of artifacts
      operationId: deployModelArtifactMultiCompleteV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/deployment_params'
      - $ref: '#/components/parameters/parts'
      - $ref: '#/components/parameters/upload_id'
      responses:
        '200':
          description: Completed multipart of artifacts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/models/{model_id}/deploy-surrogate:
    x-fiddler-api-version: v3
    put:
      tags:
      - model-v3
      summary: Update a surrogate model
      description: Update a surrogate model
      operationId: deploySurrogateUpdateV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeploySurrogateRequest'
      responses:
        '202':
          description: Surrogate model updating task with job id
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - model-v3
      summary: Deploy a surrogate model
      description: Deploy a surrogate model
      operationId: deploySurrogateV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/DeploySurrogateRequest'
      responses:
        '202':
          description: Surrogate model generation task with job id
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        job:
                          $ref: '#/components/schemas/JobCompact'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/columns:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-v3
      summary: Details of all columns
      description: Details of all columns for a model
      operationId: getModelAllColumnsV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Details of all columns for a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ModelColumns'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/columns/{column_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-v3
      description: Details of a specific column for a model
      operationId: getModelColumnV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      - $ref: '#/components/parameters/column_id'
      responses:
        '200':
          description: Details of a specific column for a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelSchemaColumnObject'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/server-info:
    x-fiddler-api-version: v3
    get:
      tags:
      - server-info-v3
      summary: Get server info
      description: Get detailed information about the Fiddler server.
      operationId: getServerInfoV3
      responses:
        '200':
          description: Server information retrieved successfully.
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ServerInfoResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/models/{model_id}/deployment:
    x-fiddler-api-version: v3
    get:
      tags:
      - model-deployment-v3
      summary: Get model deployment details
      description: Get model deployment details
      operationId: modelDeploymentV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      responses:
        '200':
          description: Details of a model deployment
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDeploymentResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    patch:
      tags:
      - model-deployment-v3
      summary: Update model deployment details
      description: Update model deployment details
      operationId: patchModelDeploymentV3
      parameters:
      - $ref: '#/components/parameters/model_id'
      requestBody:
        content:
          application/json:
            schema:
              allOf:
              - $ref: '#/components/schemas/ModelDeploymentUpdateRequest'
      responses:
        '200':
          description: Details of a model deployment with job id
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/ModelDeploymentUpdateResponse'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/charts:
    x-fiddler-api-version: v3
    get:
      tags:
      - chart-v3
      summary: List of charts from authorized projects
      description: List of charts from authorized projects
      operationId: getChartsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of charts
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/ListChartResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    post:
      tags:
      - chart-v3
      summary: Add a new chart under a project
      description: Add a new chart under a project
      operationId: addChartV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddChartRequestBody'
      responses:
        '200':
          description: successful model creation
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Chart'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/charts/{chart_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - chart-v3
      summary: Details of a Chart
      description: Details of a Chart
      operationId: getChartV3
      parameters:
      - $ref: '#/components/parameters/chart_id'
      responses:
        '200':
          description: Details of a model
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Chart'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    delete:
      tags:
      - chart-v3
      summary: Delete chart
      description: Delete chart
      operationId: deleteChartV3
      parameters:
      - $ref: '#/components/parameters/chart_id'
      responses:
        '200':
          $ref: '#/components/responses/200'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
    patch:
      tags:
      - chart-v3
      summary: Updating the details of a chart
      description: Updating the details of a chart
      operationId: updateChartV3
      parameters:
      - $ref: '#/components/parameters/chart_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChartRequest'
      responses:
        '200':
          description: Updating the details of a chart
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Chart'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/queries:
    x-fiddler-api-version: v3
    post:
      tags:
      - queries-v3
      summary: API to plot monitoring charts
      description: API to plot monitoring charts
      operationId: getQueriesV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MonitoringQueryRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/MonitoringQueryResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: true
  /v3/projects:
    x-fiddler-api-version: v3
    get:
      tags:
      - project-v3
      summary: List of projects
      description: List of projects
      operationId: getProjectsV3
      parameters:
      - $ref: '#/components/parameters/filter'
      - $ref: '#/components/parameters/search'
      - $ref: '#/components/parameters/ordering'
      - $ref: '#/components/parameters/limit'
      - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: List of projects
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/PaginatedApiResponse'
                - type: object
                  properties:
                    data:
                      type: object
                      properties:
                        items:
                          $ref: '#/components/schemas/Projects'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
    post:
      tags:
      - project-v3
      summary: Create new project
      description: Create new project
      operationId: createProjectV3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        '200':
          description: Details of the created project
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
  /v3/projects/{project_id}:
    x-fiddler-api-version: v3
    get:
      tags:
      - project-v3
      summary: Detail info of a project for the specified project id
      description: Detail info of a project
      operationId: getProjectV3
      parameters:
      - $ref: '#/components/parameters/project_id'
      responses:
        '200':
          description: Detail info of the project
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/ApiResponse'
                - type: object
                  properties:
                    data:
                      $ref: '#/components/schemas/Project'
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
      x-fiddler-is-internal: false
components:
  schemas:
    ApiResponse:
      type: object
      description: 'Response object for standard API responses.

        '
      properties:
        api_version:
          type: string
          default: '3.0'
          enum:
          - '2.0'
          - '3.0'
          description: 'API version.

            '
        kind:
          type: string
          default: NORMAL
          enum:
          - NORMAL
          description: 'Type of response, indicating a normal response.

            '
    PaginatedApiResponse:
      type: object
      description: 'Response object for paginated API responses.

        '
      properties:
        api_version:
          type: string
          default: '3.0'
          enum:
          - '2.0'
          - '3.0'
          description: 'API version of the response.

            '
        kind:
          type: string
          default: PAGINATED
          enum:
          - PAGINATED
          description: 'Type of response, indicating a paginated response.

            '
        data:
          type: object
          properties:
            page_size:
              type: integer
              default: 10
              example: 10
              description: 'Number of items per page in the response.

                '
            item_count:
              type: integer
              default: 10
              example: 10
              description: 'Number of items in the current page.

                '
            total:
              type: integer
              example: 100
              default: 100
              description: 'Total number of items across all pages.

                '
            page_count:
              type: integer
              default: 10
              example: 10
              description: 'Total number of pages.

                '
            page_index:
              type: integer
              default: 1
              example: 1
              description: 'Current page index.

                '
            offset:
              type: integer
              default: 0
              example: 0
              description: 'Offset of the first item in the current page.

                '
    ErrorResponse:
      type: object
      description: 'Response object for errors returned by the API.

        '
      properties:
        api_version:
          type: string
          default: '3.0'
          enum:
          - '2.0'
          - '3.0'
          description: 'API version of the response.

            '
        kind:
          type: string
          default: ERROR
          enum:
          - ERROR
          description: 'Type of response, usually indicating an error.

            '
        error:
          type: object
          properties:
            code:
              type: integer
              format: int32
              description: 'Represents the code for this error, typically an HTTP
                response code.

                '
              default: 400
              enum:
              - 400
              - 403
              - 404
              - 500
            message:
              type: string
              description: 'A human-readable message providing more details about
                the error. If there are multiple errors, it will be the message for
                the first error.

                '
              example: Resource Not Found
            errors:
              type: array
              description: 'Container for additional information regarding the error,
                especially for multiple errors.

                '
              items:
                type: object
                properties:
                  reason:
                    type: string
                    description: 'Unique identifier for this error, different from
                      the error code.

                      '
                    example: ResourceNotFoundException
                  message:
                    type: string
                    description: 'A human-readable message providing more details
                      about the error. If there is only one error, this field will
                      match error.message.

                      '
                    example: Resource Not Found
                  help:
                    type: string
                    description: 'Link to support or documentation providing more
                      information on the error.

                      '
    FeatureDistributionConfig:
      type: object
      properties:
        config_type:
          type: string
          enum:
          - DISTRIBUTION
        visualization:
          description: Preferred type of visualization for feature distribution
          type: string
          enum:
          - HISTOGRAM
          - KERNEL_DENSITY_ESTIMATE
    Segment:
      type: object
      required:
      - id
      - name
      - description
      - definition
      - organization
      - project
      - model
      - created_at
      - updated_at
      - created_by
      - updated_by
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        definition:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/UserCompact'
        updated_by:
          $ref: '#/components/schemas/UserCompact'
    SegmentWithoutID:
      type: object
      required:
      - name
      - definition
      properties:
        organization_name:
          type: string
        project_name:
          type: string
        model_name:
          type: string
        name:
          type: string
        description:
          type: string
        definition:
          type: string
    CustomMetric:
      type: object
      required:
      - id
      - name
      - description
      - definition
      - organization
      - project
      - model
      - created_at
      - updated_at
      - created_by
      - updated_by
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        definition:
          type: string
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        created_by:
          $ref: '#/components/schemas/UserCompact'
        updated_by:
          $ref: '#/components/schemas/UserCompact'
    CustomMetricWithoutID:
      type: object
      required:
      - name
      - definition
      properties:
        organization_name:
          type: string
        project_name:
          type: string
        model_name:
          type: string
        name:
          type: string
        description:
          type: string
        definition:
          type: string
    ProjectRoleEnum:
      type: string
      description: 'Defines the different types of project roles that can be assigned
        to users or teams.

        '
      enum:
      - Project Admin
      - Project Writer
      - Project Viewer
    ModelTaskEnum:
      type: string
      description: 'Enumeration of different types of model tasks.

        '
      enum:
      - binary_classification
      - multiclass_classification
      - regression
      - ranking
      - not_set
      - llm
    ModelArtifactStatusEnum:
      type: string
      description: 'Enumeration of different model artifact statuses.

        '
      enum:
      - no_model
      - surrogate
      - user_uploaded
    ModelInputTypeEnum:
      type: string
      description: 'Enumeration of different model input types.

        '
      enum:
      - text
      - structured
    ArtifactTypeEnum:
      type: string
      description: 'Enumeration of different artifact types.

        '
      enum:
      - SURROGATE
      - PYTHON_PACKAGE
    ModelObject:
      type: object
      description: Model fields JSON
      required:
      - id
      - name
      - input_type
      - task
      - organization
      - project
      - algorithm
      - framework
      - deleted_at
      - created_at
      - updated_at
      - created_by
      - version
      - artifact_status
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            description: UUID format unique identifier for model
          name:
            type: string
            description: Name of the model
          version:
            type: string
            description: Version of the model
            default: v1
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          input_type:
            $ref: '#/components/schemas/ModelInputTypeEnum'
          task:
            $ref: '#/components/schemas/ModelTaskEnum'
          description:
            type: string
            nullable: true
          artifact_status:
            $ref: '#/components/schemas/ModelArtifactStatusEnum'
          deleted_at:
            type: string
            format: date-time
            nullable: true
            description: flag used internally to support soft delete of model
          algorithm:
            type: string
            nullable: true
            description: Model algorithm
          framework:
            type: string
            description: A string providing information about the software library
              and version used to train and run this model
            nullable: true
          created_by:
            $ref: '#/components/schemas/UserCompact'
          updated_by:
            $ref: '#/components/schemas/UserCompact'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    QueryFilters:
      type: object
      title: QueryFilter
      description: 'Filters for querying data, including time, time zone, and bin
        size.

        '
      required:
      - time_zone
      - bin_size
      properties:
        time_label:
          type: string
          enum:
          - yesterday
          - today
          - 7d
          - 30d
          - 90d
          - 6m
          - 12m
          - ytd
          - null
          nullable: true
          description: 'Time label for filtering data within specific time ranges.

            '
        time_range:
          type: object
          nullable: true
          properties:
            start_time:
              type: string
              format: date-time
              description: 'Start time of the time range for querying data.

                '
            end_time:
              type: string
              format: date-time
              description: 'End time of the time range for querying data.

                '
          required:
          - start_time
          - end_time
          description: 'Custom time range for querying data.

            '
        time_zone:
          type: string
          default: Etc/GMT
          description: 'Time zone used for data filtering.

            '
        bin_size:
          type: string
          enum:
          - Hour
          - Day
          - Week
          - Month
          - Quarter
          default: Hour
          description: 'Bin size for grouping data in queries, defaulting to hourly
            bins.

            '
    CreateUpdateTimestamp:
      type: object
      required:
      - created_at
      - updated_at
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: 'Date and time when the object was created.

            '
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: 'Date and time when the object was last updated.

            '
    UserCompact:
      type: object
      title: UserCompactV3
      description: 'Compact version of a user which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - email
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: 'Unique identifier for the user.

            '
        full_name:
          type: string
          readOnly: true
          description: 'Full name of the user.

            '
        email:
          type: string
          format: email
          description: 'Email address of the user.

            '
    TeamCompact:
      type: object
      title: TeamCompactV3
      description: 'Compact version of a team which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: 'Unique identifier for the team.

            '
        name:
          type: string
          description: 'Name of the team.

            '
    DashboardFilters:
      type: object
      title: DashboardOptions
      properties:
        time_label:
          type: string
          enum:
          - yesterday
          - today
          - 7d
          - 30d
          - 90d
          - 6m
          - 12m
        time_range:
          type: object
          properties:
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
          required:
          - start_time
          - end_time
        time_zone:
          type: string
        bin_size:
          type: string
          enum:
          - Hour
          - Day
          - Week
          - Month
          - Quarter
    CreateAndUpdateMetaDetails:
      type: object
      title: CreateAndUpdateMetaDetails
      description: 'Details about creation and update metadata, including timestamps
        and user information.

        '
      properties:
        created_at:
          type: string
          format: date-time
          readOnly: true
          description: 'Date and time when the object was created

            '
        updated_at:
          type: string
          format: date-time
          readOnly: true
          description: 'Date and time when the object was last updated

            '
        created_by:
          $ref: '#/components/schemas/UserDetails'
        updated_by:
          $ref: '#/components/schemas/UserDetails'
    UserDetails:
      type: object
      title: UserDetails
      required:
      - id
      - email
      properties:
        id:
          type: integer
          readOnly: true
        full_name:
          type: string
          readOnly: true
        email:
          type: string
          format: email
    ModelCompact:
      type: object
      title: ModelCompact
      description: 'Compact version of a model which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - name
      - version
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier for the model.

            '
        name:
          type: string
          description: 'Name of the model.

            '
        version:
          type: string
          description: 'Version of the model.

            '
    BaselineCompact:
      type: object
      title: BaselineCompact
      description: 'Compact version of a baseline which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier of the baseline.

            '
        name:
          type: string
          description: 'Name of the baseline.

            '
    ProjectCompact:
      type: object
      title: ProjectCompact
      description: 'Compact version of a project which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier of the project.

            '
        name:
          type: string
          description: 'Name of the project.

            '
    OrganizationCompact:
      type: object
      title: OrganizationCompact
      description: 'Compact version of an organization which can be included in the
        response of relevant APIs.

        '
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier of the organization.

            '
        name:
          type: string
          description: 'Name of the organization.

            '
    EnvironmentCompact:
      type: object
      title: EnvironmentCompact
      description: 'Compact version of an environment which can be included in the
        response of relevant APIs.

        '
      required:
      - id
      - type
      - name
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier of the environment.

            '
        type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: 'Type of the environment (e.g., pre-production, production).

            '
        name:
          type: string
          description: 'Name of the environment.

            '
    JobCompact:
      type: object
      title: JobCompact
      description: 'Compact version of a job which can be included in the response
        of relevant APIs.

        '
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
          description: 'Unique identifier of the job.

            '
        name:
          type: string
          description: 'Name of the job.

            '
    PartCompact:
      type: object
      title: PartCompact
      description: 'Compact version of parts which can be included in the response
        of relevant APIs.

        '
      required:
      - part_number
      - etag
      properties:
        part_number:
          type: integer
          description: 'The number of the part.

            '
        etag:
          type: string
          description: 'Entity Tag (ETag) representing the version of the part.

            '
    SegmentCompact:
      type: object
      title: SegmentCompact
      description: Compact version of segment for v3
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the saved segment
        definition:
          type: string
          description: FQL definition
    MetricCompact:
      type: object
      title: MetricCompact
      required:
      - id
      - type
      - display_name
      - type_display_name
      properties:
        id:
          type: string
          description: Name for builtin metrics, UUID for custom metrics
        display_name:
          type: string
        type:
          $ref: '#/components/schemas/MetricTypeEnum'
        type_display_name:
          $ref: '#/components/schemas/MetricTypeDisplayNameEnum'
    MetricTypeCompact:
      type: object
      title: MetricTypeCompact
      description: Compact version of metric type which can be included in the response
        of relevant APIs
      required:
      - key
      - Name
      properties:
        key:
          type: string
        name:
          type: string
    TimestampResponse:
      type: object
      title: timestamp
      description: To record created at and updated at timestamp fields
      required:
      - created_at
      - updated_at
      properties:
        created_at:
          type: string
          format: date-time
          description: To capture created at timestamp
        updated_at:
          type: string
          format: date-time
          description: To capture updated at timestamp
    Status:
      type: string
      enum:
      - DEFAULT
      - ACTIVE
      - DONE
      - ERROR
    Trace:
      type: object
      title: Trace Detail Response
      description: Trace Detail Response
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            readOnly: true
          name:
            type: string
          metadata:
            type: string
          status:
            $ref: '#/components/schemas/Status'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          model:
            $ref: '#/components/schemas/ModelCompact'
          span_count:
            type: integer
        required:
        - id
        - name
        - status
        - organization
        - project
        - model
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    Span:
      type: object
      title: Span Detail Response
      description: Span Detail Response
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            readOnly: true
          name:
            type: string
          trace_id:
            type: string
          parent_span_id:
            type: string
          span_kind:
            type: string
          children_span_ids:
            type: array
            items:
              type: string
              format: uuid
          start_time:
            type: string
            format: date-time
          end_time:
            type: string
            format: date-time
          gen_ai_request_max_tokens:
            type: integer
          gen_ai_usage_prompt_tokens:
            type: integer
          gen_ai_usage_completion_tokens:
            type: integer
          gen_ai_system:
            type: string
          gen_ai_request_model:
            type: string
          gen_ai_request_temperature:
            type: string
          gen_ai_request_top_p:
            type: string
          gen_ai_response_model:
            type: string
          gen_ai_response_finish_reasons:
            type: string
          status:
            $ref: '#/components/schemas/Status'
          prompt_content:
            type: string
          completion_content:
            type: string
          attributes:
            type: array
            items:
              type: object
              additionalProperties: true
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          model:
            $ref: '#/components/schemas/ModelCompact'
        required:
        - id
        - name
        - trace_id
        - organization
        - project
        - model
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    ListTracesResponse:
      type: array
      title: Traces List Response
      description: Traces List Response
      items:
        $ref: '#/components/schemas/Trace'
    ListSpansResponse:
      type: array
      title: Spans List Response
      description: Spans List Response
      items:
        $ref: '#/components/schemas/Span'
    CreateSegmentRequest:
      type: object
      required:
      - model_id
      - name
      - definition
      properties:
        model_id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        definition:
          type: string
    AuthStrategiesResponseBody:
      type: object
      required:
      - sso_active
      - credentials_active
      properties:
        sso_active:
          type: boolean
        credentials_active:
          type: boolean
        provider_data:
          type: object
          description: This dictionary will only be present if sso_active is true.
            It will contain the provider data for the SSO provider. The provider data
            will contain the provider name and the provider url.
          properties:
            id:
              type: string
            url:
              type: string
          required:
          - id
          - url
    EventId:
      type: string
      format: uuid
    EventsSource:
      type: object
      properties:
        type:
          type: string
          enum:
          - EVENTS
        events:
          type: array
          maxLength: 1000
          items:
            oneOf:
            - type: object
    EventsResponse:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - EVENTS
        event_ids:
          type: array
          items:
            $ref: '#/components/schemas/EventId'
    FileSource:
      type: object
      properties:
        type:
          type: string
          enum:
          - FILE
        file_id:
          type: string
          format: uuid
    InjestionFileResponse:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - FILE
        job:
          $ref: '#/components/schemas/JobCompact'
    PublishEventsRequest:
      type: object
      required:
      - model_id
      - env_type
      - source
      properties:
        model_id:
          type: string
          format: uuid
        env_type:
          type: string
          enum:
          - PRODUCTION
          - PRE_PRODUCTION
        env_name:
          type: string
          nullable: true
        source:
          anyOf:
          - $ref: '#/components/schemas/EventsSource'
          - $ref: '#/components/schemas/FileSource'
    PublishEventsResponse:
      anyOf:
      - $ref: '#/components/schemas/EventsResponse'
      - $ref: '#/components/schemas/InjestionFileResponse'
    DeleteEventsRequest:
      type: object
      required:
      - model_id
      properties:
        model_id:
          type: string
          format: uuid
        time_range:
          type: object
          properties:
            start_time:
              oneOf:
              - type: string
              - type: integer
              - type: number
            end_time:
              oneOf:
              - type: string
              - type: integer
              - type: number
          nullable: true
        event_ids:
          type: array
          items:
            type: string
          nullable: true
        update_metrics:
          type: boolean
    DeleteEventsResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobCompact'
    Environment:
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          type:
            type: string
            enum:
            - PRE_PRODUCTION
            - PRODUCTION
          row_count:
            type: integer
            nullable: true
          model:
            $ref: '#/components/schemas/ModelCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
        required:
        - id
        - name
        - type
        - model
        - project
        - organization
      - $ref: '#/components/schemas/TimestampResponse'
    Environments:
      type: array
      items:
        $ref: '#/components/schemas/Environment'
    CompactResourceObject:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Info:
      type: object
      title: Info
      description: ''
      required:
      - resource_type
      - resource_name
      - project_name
      properties:
        resource_type:
          $ref: '#/components/schemas/AsyncJobResourceType'
        resource_name:
          type: string
          description: Name of the resource
        project_name:
          type: string
          description: Name of the project
        resource:
          $ref: '#/components/schemas/CompactResourceObject'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
      additionalProperties: true
    AsyncJobStatus:
      type: string
      description: Status of the job
      enum:
      - PENDING
      - STARTED
      - SUCCESS
      - FAILURE
    AsyncJobResourceType:
      type: string
      description: Resource type of a job
      enum:
      - DATASET
      - EVENT
      - MODEL
      - DATA
    Job:
      type: object
      title: Job
      required:
      - name
      - id
      - info
      - status
      - progress
      - error_message
      - error_reason
      properties:
        name:
          type: string
          description: A name describing the job
        id:
          type: string
          format: uuid
          description: A unique identifier for the job
        info:
          $ref: '#/components/schemas/Info'
        status:
          $ref: '#/components/schemas/AsyncJobStatus'
        progress:
          type: number
          minimum: 0
          maximum: 100
          description: Job progress -> (num tasks completed / total tasks)
        error_message:
          type: string
          description: Error message from a failed task in the job
          nullable: true
        error_reason:
          type: string
          description: Error reason for a job failure
          example: DeploymentTimeout
          nullable: true
        extras:
          type: object
          description: Provides detailed information of the async job
          nullable: true
    JobsListObject:
      type: object
      title: JobsListObject
      required:
      - name
      - id
      - info
      - status
      - created_at
      - updated_at
      - started_at
      - completed_at
      properties:
        name:
          type: string
          description: A name describing the job
        id:
          type: string
          format: uuid
        info:
          $ref: '#/components/schemas/Info'
        status:
          $ref: '#/components/schemas/AsyncJobStatus'
        created_at:
          type: string
          format: date-time
          description: Job createad at time
        updated_at:
          type: string
          format: date-time
          description: Job last updated at time
        started_at:
          type: string
          format: date-time
          description: Job execution start time
          nullable: true
        completed_at:
          type: string
          format: date-time
          description: Job execution completion time
          nullable: true
    Jobs:
      type: array
      items:
        $ref: '#/components/schemas/JobsListObject'
    InProgressJob:
      allOf:
      - $ref: '#/components/schemas/JobsListObject'
      - type: object
        properties:
          progress:
            description: Job progress -> (num tasks completed / total tasks)
            type: number
            minimum: 0
            maximum: 100
          error_message:
            type: string
            description: Error message from a failed task in the job
            nullable: true
          error_reason:
            type: string
            description: Error reason for jobs failure
            nullable: true
        required:
        - progress
        - error_message
        - error_reason
    TeamRequest:
      type: object
      title: TeamRequest
      description: Request body for create team
      required:
      - name
      properties:
        name:
          type: string
    Teams:
      type: array
      items:
        $ref: '#/components/schemas/Team'
    Team:
      type: object
      required:
      - id
      - name
      - members
      - organization
      - created_at
      - updated_at
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          members:
            $ref: '#/components/schemas/TeamMembers'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    TeamMembers:
      type: array
      items:
        $ref: '#/components/schemas/TeamMember'
    TeamMember:
      type: object
      properties:
        id:
          description: Team membership(user to team mapping) uuid
          type: string
          format: uuid
        role:
          type: string
          enum:
          - MEMBER
        user:
          $ref: '#/components/schemas/TeamMemberUserSchema'
    TeamMemberUserSchema:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
    AddConfigurationRequestBody:
      type: object
      required:
      - name
      - value
      properties:
        name:
          type: string
        project_id:
          type: string
          format: uuid
        model_id:
          type: string
          format: uuid
        value:
          type: object
    UpdateConfigurationRequestBody:
      type: object
      properties:
        value:
          type: object
    ConfigurationResponse:
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
          name:
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            nullable: true
            allOf:
            - $ref: '#/components/schemas/ProjectCompact'
          model:
            nullable: true
            allOf:
            - $ref: '#/components/schemas/ModelCompact'
          value:
            type: object
          precedence:
            type: integer
            minimum: 1
            maximum: 3
          created_by:
            $ref: '#/components/schemas/UserCompact'
          updated_by:
            $ref: '#/components/schemas/UserCompact'
        required:
        - id
        - name
        - organization
        - value
        - precedence
        - created_by
        - updated_by
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    ListConfigurationResponse:
      type: array
      title: Configuration List Response
      description: Configuration List Response
      items:
        $ref: '#/components/schemas/ConfigurationResponse'
    DRAdvancedOption:
      type: object
      properties:
        type:
          type: string
        default:
          oneOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
        min:
          nullable: true
          oneOf:
          - type: integer
          - type: number
        max:
          nullable: true
          oneOf:
          - type: integer
          - type: number
        options:
          nullable: true
          oneOf:
          - type: array
            items:
              type: string
    UmapAdvancedOptions:
      type: object
      properties:
        sample_size:
          $ref: '#/components/schemas/DRAdvancedOption'
        number_of_neighbors:
          $ref: '#/components/schemas/DRAdvancedOption'
        minimum_distance:
          $ref: '#/components/schemas/DRAdvancedOption'
    DimensionalityReductionAdvancedOptions:
      type: object
      properties:
        umap:
          $ref: '#/components/schemas/UmapAdvancedOptions'
    KeyDisplayNamePair:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        group:
          type: string
    ModelDimensionalityReductionInfo:
      type: object
      required:
      - columns
      - retrieve_columns
      - baselines
      - supported_algorithms
      - advanced_options
      - organization
      - project
      - model
      properties:
        columns:
          type: array
          items:
            $ref: '#/components/schemas/KeyDisplayNamePair'
        retrieve_columns:
          type: array
          items:
            $ref: '#/components/schemas/KeyDisplayNamePair'
        baselines:
          type: array
          items:
            $ref: '#/components/schemas/BaselineCompact'
        supported_algorithms:
          type: array
          items:
            type: string
        advanced_options:
          $ref: '#/components/schemas/DimensionalityReductionAdvancedOptions'
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
    QueryDimensionalityReduction:
      type: object
      properties:
        query_key:
          nullable: true
          type: string
        baseline_id:
          nullable: true
          type: string
        retrieve_columns:
          nullable: true
          type: array
          items:
            type: string
        metric_type:
          type: string
          enum:
          - umap
          - pca
          - tsne
        plot:
          type: string
          enum:
          - 3D
          - 2D
        filters:
          $ref: '#/components/schemas/QueryFilters'
        column_name:
          type: string
        sample_size:
          type: integer
        number_of_neighbors:
          type: integer
        minimum_distance:
          type: number
    QueryDimensionalityReductionResponse:
      type: object
      required:
      - metric_type
      - plot
      - point_metadata
      - points
      - organization
      - project
      - model
      properties:
        metric_type:
          type: string
          nullable: false
        plot:
          type: string
        point_metadata:
          type: object
          properties:
            src_type:
              type: string
              enum:
              - text
              - image_url
              - image
            fields:
              type: array
              items:
                type: object
                properties:
                  display_name:
                    type: string
                  color_by_default:
                    type: boolean
                    default: false
                  key:
                    type: string
                  type:
                    type: string
                    enum:
                    - categorical
                    - numeric
                    - string
                  possible_values:
                    type: object
                    additionalProperties:
                      type: string
                  additionalProperties:
                    type: string
            color_by_fields:
              type: array
              items:
                type: string
        points:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              src:
                type: string
              coords:
                type: array
                items:
                  type: number
              fields:
                type: object
                additionalProperties:
                  oneOf:
                  - type: string
                  - type: number
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
        baseline:
          $ref: '#/components/schemas/BaselineCompact'
    TeamRoleRequest:
      type: object
      title: TeamRole Request
      description: Request body for create team roles
      required:
      - user_id
      - team_id
      properties:
        user_id:
          type: string
          format: uuid
        team_id:
          type: string
          format: uuid
    TeamRole:
      type: object
      title: TeamRole
      description: Team Role response object. Every team role entry indicates which
        user belongs to which team.
      required:
      - role
      - uuid
      - user
      - team
      - created_at
      - updated_at
      allOf:
      - type: object
        properties:
          role:
            type: string
          uuid:
            type: string
            format: uuid
          user:
            $ref: '#/components/schemas/UserCompact'
          team:
            $ref: '#/components/schemas/TeamCompact'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    CreateCustomMetricRequest:
      type: object
      required:
      - model_id
      - name
      - definition
      properties:
        model_id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        definition:
          type: string
    AddBaselineRequestBody:
      type: object
      required:
      - name
      - model_id
      - type
      - env_type
      properties:
        name:
          type: string
          description: A name describing the baseline
        model_id:
          type: string
          format: uuid
          description: The unique identifier for the model associated with the baseline
        type:
          type: string
          enum:
          - STATIC
          - ROLLING
          description: The type of baseline, indicating whether it is STATIC or ROLLING.
        env_type:
          type: string
          enum:
          - PRODUCTION
          - PRE_PRODUCTION
          description: The environment type for the baseline, indicating whether it
            applies to production or pre-production environments.
        env_id:
          type: string
          format: uuid
          nullable: true
          description: Required when env_type is PRE_PRODUCTION
        start_time:
          type: integer
          description: Start time in milliseconds from epoch for production data
          nullable: false
        end_time:
          type: integer
          description: End time in milliseconds from epoch for production data
          nullable: false
        offset_delta:
          type: integer
          description: x is offset delta for offset=x*window_bin_size
          nullable: false
          minimum: 1
        window_bin_size:
          $ref: '#/components/schemas/WindowBinSize'
    Baseline:
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            description: Unique identifier for the baseline
          name:
            type: string
            description: A name describing the baseline
          type:
            type: string
            enum:
            - STATIC
            - ROLLING
            description: The type of baseline, indicating whether it is STATIC or
              ROLLING.
          row_count:
            type: integer
            nullable: true
            description: Number of rows in the baseline
          start_time:
            type: integer
            description: Start time in milliseconds from epoch for production data
            nullable: true
          end_time:
            type: integer
            description: End time in milliseconds from epoch for production data
            nullable: true
          offset_delta:
            type: integer
            description: x is offset delta for offset=x*window_bin_size
            nullable: true
            minimum: 1
          window_bin_size:
            $ref: '#/components/schemas/WindowBinSize'
          model:
            $ref: '#/components/schemas/ModelCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          environment:
            $ref: '#/components/schemas/EnvironmentCompact'
        required:
        - id
        - name
        - type
        - row_count
        - model
        - project
        - organization
        - environment
      - $ref: '#/components/schemas/TimestampResponse'
    WindowBinSize:
      type: string
      description: Window size to be used for relative baseline
      enum:
      - Hour
      - Day
      - Week
      - Month
    Baselines:
      type: array
      items:
        $ref: '#/components/schemas/Baseline'
    AccessKeyRequestBody:
      type: object
      anyOf:
      - type: object
        properties:
          user_id:
            type: string
            format: uuid
          user_email:
            type: string
            format: email
    AccessKeyListResponseBody:
      type: array
      items:
        $ref: '#/components/schemas/AccessKeySingleResponseBody'
    AccessKeySingleResponseBody:
      type: object
      properties:
        token:
          type: string
          example: footoken
        user:
          $ref: '#/components/schemas/UserCompact'
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
    MetricInfo:
      type: object
      required:
      - id
      - name
      - type
      - columns
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        columns:
          type: array
          items:
            type: string
        requires_baseline:
          type: boolean
        requires_categories:
          type: boolean
        is_percentage_comparison:
          type: boolean
    MetricColumnInfo:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
        name:
          type: string
        group:
          type: string
        data_type:
          type: string
    MetricTypeOption:
      type: object
      required:
      - key
      - name
      properties:
        key:
          type: string
        name:
          type: string
    ModelMetricsDetailsResponse:
      type: object
      required:
      - organization
      - project
      - model
      - metrics
      - columns
      - metric_types
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricInfo'
        columns:
          type: array
          items:
            $ref: '#/components/schemas/MetricColumnInfo'
        metric_types:
          type: array
          items:
            $ref: '#/components/schemas/MetricTypeOption'
    AlertRuleSummary:
      allOf:
      - type: object
        required:
        - id
        - alert_rule_id
        - name
        - metric
        - priority
        - bin_size
        - condition
        - alert_record_count
        - alert_value
        - baseline
        - latest_alert_record_severity
        - latest_alert_record_value
        - latest_alert_time_bucket
        - latest_alert_feature_name
        - model
        - project
        - organization
        properties:
          alert_rule_id:
            type: string
            format: uuid
            description: Unique identifier for an Alert Rule.
          id:
            type: string
            format: uuid
            description: Unique identifier of the latest Alert Record.
          name:
            type: string
            description: Name of an Alert Rule.
          metric:
            $ref: '#/components/schemas/MetricCompact'
          priority:
            $ref: '#/components/schemas/PriorityEnum'
          compare_to:
            $ref: '#/components/schemas/CompareToEnum'
          bin_size:
            $ref: '#/components/schemas/BinSizeEnum'
          condition:
            type: string
            description: Metric value comparision (lesser or greater).
          alert_record_count:
            type: integer
            description: The number of Alert evaluations that resulted in triggered
              Alert Records.
          alert_value:
            type: number
            format: float
            description: Value of the metric from the latest triggered Alert Record
              for the Alert Rule.
          feature_names:
            type: array
            items:
              type: string
            description: List of feature names, if specified in the Alert Rule.
          critical_threshold:
            type: number
            format: double
            description: Critical threshold value specified in the Alert Rule.
          warning_threshold:
            type: number
            format: double
            description: Warning threshold value specified in the Alert Rule.
          enable_notification:
            type: boolean
            description: Boolean indicating whether to send notification when an Alert
              Rule is created.
          version:
            type: string
            description: Alert Rule schema version (deprecated).
          compare_bin_delta:
            type: integer
            nullable: true
            description: This field specifies the lookback period for relative comparisons,
              expressed as a multiple of the chosen time bin size. It determines the
              historical data timeframe used to evaluate changes in the metric value.
          latest_alert_record_value:
            type: number
            format: float
            description: Value of the metric from the latest triggered Alert Record
              for the Alert Rule.
          latest_alert_time_bucket:
            type: number
            format: float
            description: Value of the time bucket from the latest triggered Alert
              Record for the Alert Rule.
          latest_alert_feature_name:
            type: string
            description: Name of feature from the latest triggered Alert Record for
              the Alert Rule.
          latest_threshold:
            type: number
            format: float
            description: Value of threshold from the latest triggered Alert Record
              for the Alert Rule.
          latest_alert_record_severity:
            $ref: '#/components/schemas/SeverityEnum'
          severity:
            $ref: '#/components/schemas/SeverityEnum'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          model:
            $ref: '#/components/schemas/ModelCompact'
          baseline:
            nullable: true
            allOf:
            - $ref: '#/components/schemas/BaselineCompact'
          segment:
            nullable: true
            allOf:
            - $ref: '#/components/schemas/SegmentCompact'
          created_at:
            type: string
            format: date-time
            description: The time when the latest triggered Alert Record is created.
          updated_at:
            type: string
            format: date-time
            description: The time when the latest triggered Alert Record is updated.
          created_by:
            $ref: '#/components/schemas/UserCompact'
          updated_by:
            $ref: '#/components/schemas/UserCompact'
    AlertRecord:
      type: object
      title: AlertRecord
      required:
      - alert_rule_id
      - id
      - alert_time_bucket
      - severity
      - alert_value
      - baseline_time_bucket
      - baseline_value
      - message
      - feature_name
      - alert_record_main_version
      - alert_record_sub_version
      - created_at
      - updated_at
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            description: Unique identifier for an Alert Record.
          alert_rule_id:
            type: string
            format: uuid
            description: Unique identifier of the corresponding Alert Rule.
          alert_run_start_time:
            type: number
            format: date-time
            description: Time pointing to when an Alert Record is created.
          baseline_time_bucket:
            type: number
            format: date-time
            nullable: true
            description: Time pointing to the start of the previous time bucket against
              which the metric value of this alert_time_bucket is compared. Applies
              only when the corresponding Alert Rule has 'time_period' based comparision.
          baseline_value:
            type: number
            format: float
            nullable: true
            description: Value of the metric from the previous time bucket against
              which the same from this alert_time_bucket is compared. Applies only
              when the corresponding Alert Rule has 'time_period' based comparision.
          severity:
            $ref: '#/components/schemas/SeverityEnum'
          alert_time_bucket:
            type: integer
            description: Time pointing to the start of the time bucket for which an
              Alert Record is created.
          alert_value:
            type: number
            format: float
            description: Value of the metric from the alert_time_bucket.
          failure_reason:
            type: string
            description: Error message if anything goes wrong while executing alerting
              logic.
          message:
            type: string
            description: A message describing Alert Record.
          feature_name:
            type: string
            description: Name of a specific feature for which this Alert Record was
              triggered. Applies only when one or more fetaure names were specified
              in the corresponding Alert Rule.
          alert_record_main_version:
            type: integer
            description: Alerting logic is executed every time a metric value is updated
              for a completed time bin. When an Alert Record is created for the first
              time for a metric and time bin combination, the main version is set
              to 1. It is incremented by 1 every time the Severity of the same metric
              and time bin combination changes. For example, when Severity changes
              from WARNING to CRITCIAL, alert_record_main_version is incremented by
              1.
          alert_record_sub_version:
            type: integer
            description: Alerting logic is executed every time a metric value is updated
              for a completed time bin. When an Alert Record is created for the first
              time for a metric and time bin combination, the main version and sub
              versions are set to 1. The sub version is incremented by 1 every time
              the an alert record created with the same Severity for the same metric
              and time bin combination. Once Severity value changes, for example,
              from WARNING to CRITCIAL, alert_record_main_version is incremented by
              1 and alert_record_sub_version is set back to 1.
          created_at:
            type: string
            format: date-time
            description: Time pointing to when an Alert Record is created.
          updated_at:
            type: string
            format: date-time
            description: Time pointing to when an Alert Record is updated.
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    AlertRecordHistory:
      allOf:
      - type: object
        properties:
          time_bucket:
            type: integer
            description: Time pointing to start of a time bucket for which one or
              more Alert Records are created.
          alert_count:
            type: integer
            description: Number of Alert Records created for the time_bucket.
          alert_history_count:
            type: integer
            description: Number of Alert Records created minus one for the time_bucket.
          latest_record:
            $ref: '#/components/schemas/AlertRecord'
        required:
        - time_bucket
        - alert_count
        - alert_history_count
        - latest_record
    AlertRule:
      type: object
      required:
      - id
      - name
      - organization
      - project
      - model
      - priority
      - metric
      - compare_to
      - condition
      - critical_threshold
      - baseline
      - created_at
      - updated_at
      - created_by
      - updated_by
      - bin_size
      - evaluation_delay
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the Alert Rule.
        created_at:
          type: string
          format: date-time
          description: Timestamp indicating when the Alert Rule was created.
        updated_at:
          type: string
          format: date-time
          description: Timestamp indicating when the Alert Rule was last updated.
        name:
          type: string
          description: Name of the Alert Rule.
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        metric:
          $ref: '#/components/schemas/MetricCompact'
        feature_names:
          type: array
          items:
            type: string
          description: List of feature names for which we have created an Alert Rule.
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        version:
          type: string
          description: Alert Rule schema version(deprecated)
        compare_to:
          $ref: '#/components/schemas/CompareToEnum'
        condition:
          $ref: '#/components/schemas/ConditionEnum'
        compare_bin_delta:
          type: integer
          description: This field specifies the lookback period for relative comparisons,
            expressed as a multiple of the chosen time bin size. It determines the
            historical data timeframe used to evaluate changes in the metric value.
        evaluation_delay:
          type: integer
          description: It indroduces the delay in the evaluation of Alert Rule. It
            is in multiple of hours, and max could be one year.
        category:
          type: string
          description: Setting Frequency Alerts on categorical columns requires specifying
            a category. For example, if the column represents geographical locations
            such as France, Germany, and India, you would pass 'France' as the category
            and 'geography' as the feature name to set a frequency alert.
        bin_size:
          $ref: '#/components/schemas/BinSizeEnum'
        warning_threshold:
          type: number
          format: double
          description: Threshold value for triggering a warning alert.
        critical_threshold:
          type: number
          format: double
          description: Threshold value for triggering a critical alert.
        enable_notification:
          type: boolean
          description: Indicates whether notifications are enabled for the Alert Rule.
        model:
          $ref: '#/components/schemas/ModelCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        baseline:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/BaselineCompact'
        segment:
          nullable: true
          allOf:
          - $ref: '#/components/schemas/SegmentCompact'
        created_by:
          $ref: '#/components/schemas/UserCompact'
        updated_by:
          $ref: '#/components/schemas/UserCompact'
    Notification:
      type: object
      required:
      - emails
      - pagerduty_services
      - pagerduty_severity
      - webhooks
      properties:
        emails:
          type: array
          items:
            type: string
        pagerduty_services:
          type: array
          items:
            type: string
        pagerduty_severity:
          type: string
        webhooks:
          type: array
          items:
            type: string
            format: uuid
    NotificationPayload:
      type: object
      minProperties: 1
      properties:
        emails:
          type: array
          items:
            type: string
        pagerduty_services:
          type: array
          items:
            type: string
        pagerduty_severity:
          type: string
        webhooks:
          type: array
          items:
            type: string
            format: uuid
    AlertRulePostPayload:
      type: object
      allOf:
      - type: object
        required:
        - model_id
        - name
        - priority
        - metric_id
        - bin_size
        - compare_to
        - condition
        - critical_threshold
        properties:
          compare_bin_delta:
            type: integer
            description: This field specifies the lookback period for relative comparisons,
              expressed as a multiple of the chosen time bin size. It determines the
              historical data timeframe used to evaluate changes in the metric value.
          evaluation_delay:
            description: It indroduces the delay in the evaluation of Alert Rule.
              It is in multiple of hours, and max could be one year.
            type: integer
          model_id:
            description: Unique identifier of the model.
            type: string
            format: uuid
          segment_id:
            description: Unique identifier of the segment.
            type: string
            format: uuid
          name:
            description: Name of the Alert Rule.
            type: string
          metric_id:
            description: The unique identifier of the metric for which we want to
              create an Alert Rule.
            type: string
          feature_names:
            description: List of feature names for which we want to create an Alert
              Rule.
            type: array
            items:
              type: string
          category:
            type: string
            description: Setting Frequency Alerts on categorical columns requires
              specifying a category. For example, if the column represents geographical
              locations such as France, Germany, and India, you would pass 'France'
              as the category and 'geography' as the feature name to set a frequency
              alert.
          baseline_id:
            description: It should only be specified for the drift Alert Rules. Is
              is unique identifier of the baseline selected for drift calculations.
            type: string
            format: uuid
          priority:
            $ref: '#/components/schemas/PriorityEnum'
          bin_size:
            $ref: '#/components/schemas/BinSizeEnum'
          compare_to:
            $ref: '#/components/schemas/CompareToEnum'
          condition:
            $ref: '#/components/schemas/ConditionEnum'
          warning_threshold:
            description: Threshold value for triggering a warning alert.
            type: number
            format: double
          critical_threshold:
            description: Threshold value for triggering a critical alert.
            type: number
            format: double
    AlertRuleUpdatableFields:
      type: object
      properties:
        name:
          description: Name of the Alert Rule.
          type: string
        priority:
          $ref: '#/components/schemas/PriorityEnum'
        enable_notification:
          description: Indicates whether notifications are enabled for the Alert Rule.
          type: boolean
    SeverityEnum:
      type: string
      enum:
      - WARNING
      - CRITICAL
      - DEFAULT
    CompareToEnum:
      type: string
      description: This API provides two alert evaluation methods, absolute comparisons
        determine if the current metric value breaches a predefined threshold, while
        relative comparisons analyze changes in metric by referencing a chosen time
        period.
      enum:
      - raw_value
      - time_period
    MetricTypeEnum:
      type: string
      enum:
      - drift
      - data_integrity
      - performance
      - service_metrics
      - statistic
      - custom
    BinSizeEnum:
      type: string
      description: The Supported bin sizes for the Alert Rules.
      enum:
      - Hour
      - Day
      - Week
      - Month
    MetricTypeDisplayNameEnum:
      type: string
      enum:
      - Data Drift
      - Data Integrity
      - Performance
      - Traffic
      - Statistic
      - Custom Metric
    PriorityEnum:
      type: string
      enum:
      - HIGH
      - MEDIUM
      - LOW
    ConditionEnum:
      type: string
      description: The comparison condition while evaluating the Alert Rule.
      enum:
      - lesser
      - greater
    AlertRuleStats:
      type: object
      required:
      - drift
      - performance
      - data_integrity
      properties:
        drift:
          $ref: '#/components/schemas/AlertRuleStatDetailsObject'
        performance:
          $ref: '#/components/schemas/AlertRuleStatDetailsObject'
        data_integrity:
          $ref: '#/components/schemas/AlertRuleStatDetailsObject'
        last_modified:
          type: string
          format: date-time
    AlertRuleStatDetailsObject:
      type: object
      required:
      - warning
      - critical
      properties:
        warning:
          type: integer
        critical:
          type: integer
    WriteableWebhookInAlertRule:
      type: object
      required:
      - uuid
      properties:
        uuid:
          type: string
          format: uuid
          example: 02a244dd-289a-4120-8804-e47f12feeb2e
    FileId:
      type: string
      format: uuid
      description: Unique file identifier
    PartNumber:
      type: integer
      description: Part number of the file in multi-part upload process.
      maximum: 1000.0
      minimum: 1.0
    FileName:
      type: string
      description: Name of the file uploaded by the user.
    FileBinary:
      type: string
      format: binary
      description: Binary file object
    FileUploadRequest:
      type: object
      required:
      - file
      properties:
        file:
          $ref: '#/components/schemas/FileBinary'
    FileResponse:
      required:
      - id
      - filename
      - type
      - status
      - created_at
      - updated_at
      - created_by
      - updated_by
      allOf:
      - type: object
        properties:
          id:
            $ref: '#/components/schemas/FileId'
          filename:
            $ref: '#/components/schemas/FileName'
          type:
            type: string
            description: File type
            enum:
            - CSV
            - PARQUET
            - TAR_GZ
          status:
            type: string
            description: Status of the file upload process
            enum:
            - INITIATED
            - SUCCESSFUL
            - FAILED
          created_by:
            $ref: '#/components/schemas/UserCompact'
          updated_by:
            $ref: '#/components/schemas/UserCompact'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    FileUploadResponse:
      $ref: '#/components/schemas/FileResponse'
    MultiPartInitRequest:
      type: object
      required:
      - filename
      properties:
        filename:
          $ref: '#/components/schemas/FileName'
    MultiPartInitResponse:
      $ref: '#/components/schemas/FileResponse'
    PartUploadRequest:
      type: object
      required:
      - file
      - file_id
      - part_number
      properties:
        file:
          $ref: '#/components/schemas/FileBinary'
        file_id:
          $ref: '#/components/schemas/FileId'
        part_number:
          $ref: '#/components/schemas/PartNumber'
    MultiPartUploadResponse:
      type: object
      required:
      - part_id
      properties:
        part_id:
          $ref: '#/components/schemas/PartNumber'
    Part:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the part
        number:
          $ref: '#/components/schemas/PartNumber'
    MultiPartCompleteRequest:
      type: object
      properties:
        file_id:
          $ref: '#/components/schemas/FileId'
        parts:
          type: array
          items:
            $ref: '#/components/schemas/Part'
    MultiPartCompleteResponse:
      $ref: '#/components/schemas/FileResponse'
    Metrics:
      type: object
      required:
      - traffic_count
      - triggered_alerts
      properties:
        traffic_count:
          type: integer
        triggered_alerts:
          type: integer
    MonitoringSummaryObject:
      type: object
      required:
      - project
      - model
      - default_dashboard_id
      - last_event_time
      - metrics
      properties:
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          allOf:
          - $ref: '#/components/schemas/ModelCompact'
          - type: object
            properties:
              created_at:
                type: string
                format: date-time
            required:
            - created_at
        default_dashboard_id:
          type: string
          format: uuid
        last_event_time:
          type: string
          format: date-time
        metrics:
          $ref: '#/components/schemas/Metrics'
    MonitoringSummaryResponse:
      type: object
      required:
      - last_cached_time
      - summary
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        last_cached_time:
          type: string
          format: date-time
        summary:
          type: array
          items:
            $ref: '#/components/schemas/MonitoringSummaryObject'
    HistogramRequestPayload:
      type: object
      required:
      - baseline_id
      - start_time
      - bin_size
      - column_id
      properties:
        baseline_id:
          type: string
          format: uuid
        segment_id:
          type: string
          format: uuid
        start_time:
          type: string
          format: date-time
        bin_size:
          type: string
          enum:
          - Hour
          - Day
          - Week
          - Month
          - Quarter
        time_zone:
          type: string
          default: Etc/GMT
        column_id:
          type: string
        max_bins:
          type: number
          format: int
        normalize:
          type: boolean
    HistogramObject:
      type: object
      required:
      - organization
      - project
      - model
      - baseline
      - column_id
      - bins
      - baseline_histogram
      - production_histogram
      - num_actual_bins
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
        baseline:
          $ref: '#/components/schemas/BaselineCompact'
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        column_id:
          type: string
        bins:
          type: array
          items:
            type: string
        baseline_histogram:
          type: array
          items:
            type: number
            format: float
        production_histogram:
          type: array
          items:
            type: number
            format: float
        num_actual_bins:
          type: number
          format: int
    CorrelationMatrixRequestBody:
      type: object
      required:
      - model_id
      - env_type
      - column_names
      properties:
        model_id:
          type: string
          format: uuid
          description: Unique identifier of a model
        column_names:
          type: array
          maxItems: 8
          items:
            type: string
          description: list of column names for matrix correlation
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of data to use for analysis
        env_id:
          nullable: true
          type: string
          format: uuid
          description: Unique identifier of PRE-PRODUCTION environments
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        time_filter:
          $ref: '#/components/schemas/TimeFilter'
    CorrelationMatrixResponse:
      type: object
      properties:
        matrix:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: number
          description: Correlation matrix
          example:
            feature_1:
              feature_1: 1.0
              feature_2: 0.53
              feature_3: -0.08
            actual_label_2:
              feature_1: 0.53
              feature_2: 1.0
              feature_3: 0.007
            actual_label_3:
              predicted_label_1: -0.08
              predicted_label_2: 0.007
              predicted_label_3: 1.0
    CorrelationRequestBody:
      type: object
      required:
      - model_id
      properties:
        model_id:
          type: string
          format: uuid
          description: Unique identifier of a model
        column_names:
          type: array
          items:
            type: string
          description: list of 2 column names for analysis (mandatory for Analytics
            Charts)
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of data to use for analysis (mandatory for Analytics Charts)
        env_id:
          nullable: true
          type: string
          format: uuid
          description: Unique identifier of PRE-PRODUCTION environments
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        time_filter:
          $ref: '#/components/schemas/TimeFilter'
        slice_query:
          type: string
          description: slice query (For Analyze page only)
        x_column_name:
          type: string
          description: column name for x axis (For Analyze page only)
        y_column_name:
          type: string
          description: column name for y axis (For Analyze page only)
        num_samples:
          type: integer
          minimum: 1
          maximum: 10000
          description: Number of samples to use (For Analyze page only)
        num_bins:
          type: integer
          minimum: 1
          maximum: 1000
          description: Number of bins for the line plot ((For Analyze page only)
    CorrelationScatterLineResponse:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - SCATTER_LINE_PLOT
        scatter:
          type: array
          items:
            type: array
            items:
              type: integer
          example:
          - - 43
            - 43
          - - 36
            - 36
        line:
          type: array
          items:
            type: array
          example:
          - - 18.0
            - 18.0
          - - 20.0
            - 20.0
        config:
          type: object
          properties:
            visualization:
              description: Preferred type of visualization for feature correlation
              type: string
              enum:
              - LINE_PLOT
              - SCATTER_PLOT
            x_axis_column:
              type: string
              description: Column name to use as the x-axis in the chart
            axis_interchangeable:
              type: boolean
              description: Whether or not the axis / column representation, can be
                swapped in the chart
    CorrelationBoxResponse:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - BOX_PLOT
        box:
          type: array
          items:
            type: array
            items:
              anyOf:
              - type: string
              - type: number
          example:
          - - France
            - 19
            - 31.0
            - 37.0
            - 44.0
            - 78
          - - Germany
            - 18
            - 33.0
            - 39.0
            - 47.0
            - 75
          - - Spain
            - 18
            - 31.0
            - 38.0
            - 45.0
            - 72
        config:
          type: object
          properties:
            visualization:
              description: Preferred type of visualization for feature correlation
              type: string
              enum:
              - BOX_PLOT
            x_axis_column:
              type: string
              description: Column name to use as the x-axis in the chart
            axis_interchangeable:
              type: boolean
              description: Whether or not the axis / column representation, can be
                swapped in the chart
    CorrelationStackedResponse:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - STACKED_PLOT
        stacked:
          type: array
          items:
            type: array
            items:
              anyOf:
              - type: string
              - type: number
          example:
          - - France
            - France
            - 470
          - - Germany
            - Germany
            - 266
          - - Spain
            - Spain
            - 240
        config:
          type: object
          properties:
            visualization:
              description: Preferred type of visualization for feature correlation
              type: string
              enum:
              - STACKED_PLOT
            x_axis_column:
              type: string
              description: Column name to use as the x-axis in the chart
            axis_interchangeable:
              type: boolean
              description: Whether or not the axis / column representation, can be
                swapped in the chart
    FeatureDistributionRequestBody:
      type: object
      required:
      - model_id
      - column_name
      properties:
        model_id:
          type: string
          format: uuid
          description: Unique identifier of a model
        column_name:
          type: string
          description: Name of the column to get distribution on
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of data to use for analysis (mandatory for Analytics Charts)
        env_id:
          nullable: true
          type: string
          format: uuid
          description: Unique identifier of PRE-PRODUCTION environments
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        time_filter:
          $ref: '#/components/schemas/TimeFilter'
        num_bins:
          type: integer
          minimum: 1
          maximum: 1000
          description: Number of bins for feature distribution
        slice_query:
          type: string
          description: slice query (For Analyze page only)
    FeatureDistributionKDEHistResponse:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - KERNEL_DENSITY_HISTOGRAM
        kernel_density:
          type: array
          items:
            type: array
            items:
              type: number
          example:
          - - 17.5
            - 0
          - - 18.5
            - 0.002
        histogram:
          type: array
          items:
            type: array
            items:
              type: number
          example:
          - - 19.0
            - 20.0
            - 5
          - - 20.0
            - 21.0
            - 2
        config:
          $ref: '#/components/schemas/FeatureDistributionConfig'
    FeatureDistributionHistogramResponse:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - HISTOGRAM
        histogram:
          type: array
          items:
            type: array
            items:
              anyOf:
              - type: string
              - type: number
          example:
          - - France
            - 470
          - - Germany
            - 266
          - - Spain
            - 240
        config:
          $ref: '#/components/schemas/FeatureDistributionConfig'
    ParseSliceQueryRequestBody:
      type: object
      required:
      - model_id
      - query
      properties:
        model_id:
          type: string
          format: uuid
        query:
          type: string
    ParseSliceQueryResponseBody:
      type: object
      required:
      - environment_name
      - is_prod
      - is_slice
      - model_name
      - table_name
      properties:
        environment_name:
          type: string
        is_prod:
          type: boolean
        is_slice:
          type: boolean
        model_name:
          type: string
        table_name:
          type: string
    FetchSliceQueryRequestBody:
      type: object
      required:
      - model_id
      - query
      properties:
        model_id:
          type: string
          format: uuid
        query:
          type: string
        sample:
          type: boolean
        max_rows:
          type: integer
          minimum: 1
          maximum: 10000
        columns:
          type: array
          items:
            type: string
    FetchSliceQueryResponseMetadata:
      type: object
      properties:
        is_slice:
          type: boolean
        columns:
          type: array
          items:
            type: string
        dtypes:
          type: array
          items:
            type: string
        env:
          $ref: '#/components/schemas/EnvironmentCompact'
        model:
          $ref: '#/components/schemas/ModelCompact'
    FetchSliceQueryResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/FetchSliceQueryResponseMetadata'
        rows:
          type: array
          items:
            type: array
    DependencePlotRequestBody:
      type: object
      required:
      - model_id
      - reference_data_source
      - input_data_source
      - inputs
      - output_column
      properties:
        model_id:
          type: string
          format: uuid
        input_data_source:
          $ref: '#/components/schemas/DependencePlotInputDataSource'
        reference_data_source:
          $ref: '#/components/schemas/DependencePlotReferenceDataSource'
        inputs:
          type: array
          items:
            type: string
          description: List of features we want to compute dependence plots on.
        output_column:
          type: string
          description: Name of the output class we want to compute dependence plots
            on.
        plot_type:
          type: string
          enum:
          - PDP
          - ICE
          description: Either ICE or PDP. Predictions are averaged if plot type is
            PDP. Defaults to ICE.
        grid_resolution:
          type: integer
          description: number of values in the grid for numeric features i.e. number
            of points we want to plot. This value will be overridden for categorical
            variables, where the number of values will be equal to the number of categories.
          minimum: 1
          maximum: 10000
        ci_level:
          type: number
          description: The confidence level (between 0 and 1) to use for all confidence
            intervals computed
          minimum: 0.0
          maximum: 1.0
    DependencePlotReferenceDataSource:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        env_id:
          type: string
          format: uuid
          nullable: true
          description: Environment id, required for PRE_PRODUCTION env_type
        num_samples:
          type: integer
          description: Number of rows to retrieve
          minimum: 1
          maximum: 10000
    DependencePlotInputDataSource:
      oneOf:
      - $ref: '#/components/schemas/DependencePlotInputEnvDataSource'
      - $ref: '#/components/schemas/DependencePlotInputSqlSliceQueryDataSource'
      - $ref: '#/components/schemas/DependencePlotInputEventIdDataSource'
      - $ref: '#/components/schemas/DependencePlotInputRawDataDataSource'
    DependencePlotInputEnvDataSource:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        env_id:
          type: string
          format: uuid
          nullable: true
          description: Environment id, required for PRE_PRODUCTION env_type
        num_samples:
          type: integer
          description: Number of rows to retrieve
          minimum: 1
          maximum: 10000
    DependencePlotInputSqlSliceQueryDataSource:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - SQL_SLICE_QUERY
        query:
          type: string
          description: SQL query
        num_samples:
          type: integer
          description: Number of rows to retrieve
          minimum: 1
          maximum: 10000
    DependencePlotInputEventIdDataSource:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - EVENT_ID
        event_id:
          type: string
          description: event ID of the row to fetch forming the input dataset
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        env_id:
          type: string
          format: uuid
          nullable: true
          description: Environment id, required for PRE_PRODUCTION env_type
    DependencePlotInputRawDataDataSource:
      type: object
      properties:
        source_type:
          type: string
          enum:
          - ROWS
        rows:
          type: array
          items:
            type: object
          description: list of dictionaries specifying data for the input_df
        num_samples:
          type: integer
          description: Number of rows to consider
          minimum: 1
          maximum: 10000
    DependencePlotResponse:
      type: object
      properties:
        plot_type:
          type: string
          enum:
          - PDP
          - ICE
        output_column:
          type: string
        columns:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/DependencePlot'
    DependencePlot:
      type: object
      properties:
        central_tendency:
          type: array
          items:
            type: number
          example:
          - 0.04
          - 0.002
          - 0.1
        confidence_intervals:
          type: array
          items:
            type: number
          example:
          - 0.007
          - 0.02
          - 0.08
        grid:
          type: array
          items:
            type: number
          example:
          - 427.0
          - 568.0
          - 709.0
          - 850.0
        predictions:
          type: array
          items:
            type: number
          example:
          - 0.25543349849002067
          - 0.22185671902183196
          - 0.21882196458436376
          - 0.22168418439383217
    ExplainRequestBody:
      type: object
      required:
      - model_id
      - input_data_source
      properties:
        model_id:
          type: string
          format: uuid
        ref_data_source:
          $ref: '#/components/schemas/ExplainReferenceDataSource'
        input_data_source:
          $ref: '#/components/schemas/ExplainInputDataSource'
        explanation_type:
          type: string
          enum:
          - FIDDLER_SHAP
          - SHAP
          - IG
          - MEAN_RESET
          - ZERO_RESET
          - PERMUTE
          - YOUR_CUSTOM_EXPLANATION_NAME
          description: Explanation method
        num_permutations:
          type: integer
          minimum: 1
          maximum: 10000
          description: For Fiddler SHAP, that corresponds to the number of coalitions
            to sample to estimate the Shapley values of each single-reference game.
            For the permutation algorithms, this corresponds to the number of permutations
            from the dataset to use for the computation.
          example: 500
        ci_level:
          type: number
          description: The confidence interval level (between 0 and 1) to use for
            Fiddler SHAP
          example: 0.95
          minimum: 0.0
          maximum: 1.0
        top_n_class:
          type: integer
          description: For multiclass classification models only, specifying if only
            the n top classes are computed or all classes (when parameter is None)
          example: 3
          minimum: 1
        generate_text_description:
          type: boolean
          description: Boolean to generate Text description (for UI)
    ExplainInputDataSource:
      oneOf:
      - $ref: '#/components/schemas/ExplainInputRowDataSource'
      - $ref: '#/components/schemas/ExplainInputEventIdDataSource'
    ExplainInputRowDataSource:
      type: object
      required:
      - row
      - source_type
      properties:
        source_type:
          type: string
          enum:
          - ROW
        row:
          type: object
          example:
            CreditScore: 619
            Geography: France
            Gender: Female
            Age: 42
            Tenure: 2
            Balance: 0.0
            NumOfProducts: 1
            HasCrCard: 'Yes'
            IsActiveMember: 'Yes'
            EstimatedSalary: 101348.88
          description: Single row to explain in dictionary format, with keys the feature
            names and values the associated values.
    ExplainInputEventIdDataSource:
      type: object
      required:
      - event_id
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - EVENT_ID
        event_id:
          type: string
          description: Fiddler ID of the row to be explained
        env_id:
          type: string
          format: uuid
          description: uuid of Environment where the event ID is from
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
    ExplainReferenceDataSource:
      oneOf:
      - $ref: '#/components/schemas/ExplainReferenceEnvSource'
      - $ref: '#/components/schemas/ExplainReferenceSliceQueryDataSource'
    ExplainReferenceEnvSource:
      type: object
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
        env_id:
          type: string
          format: uuid
          description: Env uuid
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        num_samples:
          type: integer
          description: Number of rows to retrieve for reference dataset
          example: 200
          minimum: 1
          maximum: 1000000
    ExplainReferenceSliceQueryDataSource:
      type: object
      required:
      - source_type
      - query
      properties:
        source_type:
          type: string
          enum:
          - SQL_SLICE_QUERY
        query:
          type: string
          description: SQL query
        num_samples:
          type: integer
          description: Number of rows to retrieve for reference dataset
          example: 200
          minimum: 1
          maximum: 1000000
    ExplainResponse:
      type: object
      properties:
        explanation_ci_level:
          type: number
          example: 0.95
        explanation_type:
          type: string
          example: FIDDLER_SHAP
        num_permutations:
          type: integer
          example: 300
        num_refs:
          type: integer
          example: 200
        explanations:
          type: object
          additionalProperties:
            type: object
            properties:
              model_prediction:
                type: number
                example: 0.40507
              baseline_prediction:
                type: number
                example: 0.175291
              GEM:
                type: object
                properties:
                  type:
                    type: string
                    example: container
                  content:
                    type: array
                    example:
                    - type: simple
                      feature_name: CreditScore
                      value: 619
                      attribution: -0.08369918667452322
                      attribution-uncertainty: 0.17771162663751516
                    - type: simple
                      feature_name: Geography
                      value: France
                      attribution: 0.06518146363651527
                      attribution-uncertainty: 0.10341287070782923
                    items:
                      type: object
                  attribution:
                    type: number
                    example: 0.220791
    FeatureImpactRequestBody:
      type: object
      description: Feature Impact api request body
      required:
      - data_source
      - model_id
      properties:
        data_source:
          $ref: '#/components/schemas/FeatureImpactDataSource'
        model_id:
          type: string
          format: uuid
          description: Unique ID of model.
        num_refs:
          type: integer
          description: Number of reference points used in the explanations. Only for
            non text inputs
          minimum: 1
          maximum: 1000000
        num_iterations:
          type: integer
          description: The maximum number of ablated model inferences *per feature*.
            Only for non text inputs
          minimum: 1
          maximum: 100000
        ci_level:
          type: number
          description: The confidence interval level (between 0 and 1) to use for
            all confidence intervals computed. Only for non text inputs
          minimum: 0.0
          maximum: 1.0
        min_support:
          type: integer
          description: Specify a minimum support to retrieve top words. Only for Text
            data (NLP models)
          minimum: 1
        output_columns:
          type: array
          items:
            type: string
          description: Only used for NLP (TEXT inputs) models. Output column names
            to compute feature impact on. If None, use all.
        ref_env_id:
          type: string
          format: uuid
          description: environment to use for the reference dataset.
    UploadFeatureImpactTabularRequestBody:
      type: object
      description: User uploaded Feature Impact api request body
      required:
      - model_id
      - feature_impact_map
      properties:
        model_id:
          type: string
          format: uuid
          description: Unique ID of model.
        feature_impact_map:
          description: Feature impacts dictionary with feature name as key and impact
            as value
          type: object
          additionalProperties:
            type: number
            format: float
          example:
            feature_1: 0.123
            feature_2: -0.012
            feature_n: 0.0345
    FeatureImpactDataSource:
      description: Feature Impact api data sources
      oneOf:
      - $ref: '#/components/schemas/FeatureImpactEnvDataSource'
      - $ref: '#/components/schemas/FeatureImpactSliceQueryDataSource'
      - $ref: '#/components/schemas/FeatureImpactFqlDataSource'
    FeatureImpactEnvDataSource:
      type: object
      description: Feature Impact api dataset data source
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
          description: Environment data source type.
        env_id:
          type: string
          format: uuid
          description: Unique identifier of environment.
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of environment. Either PRE_PRODUCTION or PRODUCTION.
        num_samples:
          type: integer
          description: Number of input points explained.
          minimum: 1
          maximum: 1000000
    FeatureImpactSliceQueryDataSource:
      type: object
      description: Feature Impact api SQL slice query data source
      required:
      - source_type
      - query
      properties:
        source_type:
          type: string
          enum:
          - SQL_SLICE_QUERY
          description: Sql query data source type.
        query:
          type: string
          description: SQL query
        num_samples:
          type: integer
          description: Number of input points explained.
          minimum: 1
          maximum: 1000000
    FeatureImpactFqlDataSource:
      type: object
      description: Feature Impact api FQL data source
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - FQL
          description: FQL data source type.
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of environment. Either PRE_PRODUCTION or PRODUCTION.
        env_id:
          type: string
          format: uuid
          description: Unique identifier of environment.
        slice_definition:
          type: string
          description: FQL definition.
        time_filter:
          $ref: '#/components/schemas/TimeFilter'
        num_samples:
          type: integer
          description: Number of input points explained
          minimum: 1
          maximum: 1000000
    FeatureImpactResponse:
      description: Feature Impact api response (text or tabular).
      oneOf:
      - $ref: '#/components/schemas/FeatureImpactTextResponse'
      - $ref: '#/components/schemas/FeatureImpactTabularResponse'
      - $ref: '#/components/schemas/UploadFeatureImpactTabularResponse'
    FeatureImpactTabularResponse:
      type: object
      description: Feature Impact Tabular api response.
      properties:
        response_type:
          type: string
          enum:
          - FEATURE_IMPACT_TABULAR
        model_task:
          type: string
          description: Task the model is designed to address.
        model_input_type:
          type: string
          description: Input type of model.
        ci_level:
          type: number
          example: 0.9
          description: The confidence level (between 0 and 1).
        feature_names:
          type: array
          items:
            type: string
          example:
          - CreditScore
          - Geography
          - Age
          description: Names of the features as inferred from the points used in explanation.
        fixed_sample_ci:
          type: array
          items:
            type: number
          example:
          - 0.04
          - 0.002
          - 0.1
          description: Confidence interval when we consider our points fixed and only
            the ablation as random. If n_cycles == 1, this is None. This is a tuple
            with the ith entry corresponding to the feature impact fixed sample CI
            of the ith feature.
        num_inputs:
          type: integer
          example: 3100
          description: Number of input points explained.
        num_refs:
          type: integer
          example: 500
          description: The number of points used as the reference sample.
        random_sample_ci:
          type: array
          items:
            type: number
          example:
          - 0.024
          - 0.0204
          - 0.0246
          description: Confidence interval when we consider our feature importance
            measure as an estimate of a single point sampled randomly. This is a tuple
            with the ith entry corresponding to the feature impact random sample CI
            of the ith feature.
        mean_abs_prediction_change_impact:
          type: array
          items:
            type: number
          example:
          - 0.01628
          - 0.0456
          - 0.01728
          description: Feature impact as  measured by average absolute change in prediction
            when a given feature is randomly ablated. This is a tuple with the ith
            entry corresponding to the feature impact value of the ith feature.
        mean_prediction_ci:
          type: number
          example: 0.00484
          description: Random-sample CI for the mean prediction.
        mean_prediction:
          type: number
          example: 0.2063
          description: The mean prediction over the explained points.
        num_iterations:
          type: integer
          example: 200
          description: The maximum number of ablated model inferences *per feature*.
        env_name:
          type: string
          example: bank_churn
          description: Name of the environment.
        env_uuid:
          type: string
          example: bcb8e333-39d1-4ba5-a485-dec1591f7122
          description: Unique identifier of environment.
        created_at:
          type: string
          example: 2023-12-12 18:21:07.616438+00:00
          description: Created at time stamp.
        feature_impact_scores:
          type: array
          items:
            type: number
          example:
          - 0.01628
          - 0.0456
          - 0.01728
          description: A copy of mean_abs_prediction_change_impact. To maintain parity
            in keys for UI in precomputed endpoint.
    FeatureImpactTextResponse:
      type: object
      description: Feature Impact Text api response
      properties:
        response_type:
          type: string
          enum:
          - FEATURE_IMPACT_TEXT
        model_task:
          type: string
          description: Task the model is designed to address.
        model_input_type:
          type: string
          description: Input type of model.
        output_name:
          type: string
          example: sentiment
          description: Name of the output.
        tokens:
          type: object
          description: Table of delta-prob, support and Word
        min_support:
          type: integer
          example: 15
          description: Min support to retrieve top words.
        num_inputs:
          type: integer
          example: 200
          description: Number of input points explained.
        env_name:
          type: string
          example: bank_churn
          description: Name of the environment.
        env_uuid:
          type: string
          example: bcb8e333-39d1-4ba5-a485-dec1591f7122
          description: Unique identifier of environment.
        created_at:
          type: string
          example: 2023-12-12 18:21:07.616438+00:00
          description: Created at time stamp.
    UploadFeatureImpactTabularResponse:
      type: object
      description: Response for customer generated feature impacts for the given model.
      properties:
        response_type:
          type: string
          enum:
          - FEATURE_IMPACT_TABULAR_UPLOADED
        feature_names:
          type: array
          items:
            type: string
          example:
          - CreditScore
          - Geography
          - Age
          description: Names of the features as inferred from the points used in explanation.
        feature_impact_scores:
          type: array
          items:
            type: number
          example:
          - 0.01628
          - 0.0456
          - -0.01728
          description: Directional(+ve or -ve) feature impact score as input by user.
        system_generated:
          type: boolean
          description: Boolean flag identifier indicating that the feature impact
            was computed or user uploaded.
    FeatureImportanceRequestBody:
      type: object
      required:
      - data_source
      - model_id
      properties:
        data_source:
          $ref: '#/components/schemas/FeatureImportanceDataSource'
        model_id:
          type: string
          format: uuid
        num_refs:
          type: integer
          description: Number of reference points used in the explanations
          minimum: 1
          maximum: 1000000
        num_iterations:
          type: integer
          description: The maximum number of ablated model inferences *per feature*
          minimum: 1
          maximum: 100000
        ci_level:
          type: number
          description: The confidence interval level (between 0 and 1) to use for
            all confidence intervals computed
          minimum: 0.0
          maximum: 1.0
        ref_env_id:
          type: string
          format: uuid
          description: environment to use for the reference dataset.
    FeatureImportanceDataSource:
      oneOf:
      - $ref: '#/components/schemas/FeatureImportanceEnvDataSource'
      - $ref: '#/components/schemas/FeatureImportanceSliceQueryDataSource'
      - $ref: '#/components/schemas/FeatureImpactFqlDataSource'
    FeatureImportanceEnvDataSource:
      type: object
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
        env_id:
          type: string
          format: uuid
          description: Env uuid
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        num_samples:
          type: integer
          description: Number of input points explained
          minimum: 1
          maximum: 1000000
    FeatureImportanceSliceQueryDataSource:
      type: object
      required:
      - source_type
      - query
      properties:
        source_type:
          type: string
          enum:
          - SQL_SLICE_QUERY
        query:
          type: string
          description: SQL query
        num_samples:
          type: integer
          description: Number of input points explained
          minimum: 1
          maximum: 1000000
    FeatureImportanceResponse:
      type: object
      properties:
        model_task:
          type: string
        model_input_type:
          type: string
        total_input_samples:
          type: integer
          example: 10000
        valid_input_samples:
          type: integer
          example: 9000
        ci_level:
          type: number
          example: 0.9
        feature_names:
          type: array
          items:
            type: string
          example:
          - CreditScore
          - Geography
          - Age
        fixed_sample_ci:
          type: array
          items:
            type: number
          example:
          - 0.04
          - 0.002
          - 0.1
        loss:
          type: string
          example: pointwise_logloss
        mean_loss:
          type: number
          example: 2.41122
        mean_loss_ci:
          type: number
          example: 0.0434
        mean_loss_increase_importance:
          type: array
          items:
            type: number
          example:
          - -0.0581
          - -0.097
          - -0.0707
        num_refs:
          type: integer
          example: 500
        random_sample_ci:
          type: array
          items:
            type: number
          example:
          - 0.024
          - 0.0204
          - 0.0246
        num_inputs:
          type: integer
          example: 250
        num_iterations:
          type: integer
          example: 200
        env_name:
          type: string
          example: bank_churn
        env_uuid:
          type: string
          example: bcb8e333-39d1-4ba5-a485-dec1591f7122
        created_at:
          type: string
          example: 2023-12-12 18:21:07.616438+00:00
    ScoreRequestBody:
      type: object
      required:
      - data_source
      - model_id
      properties:
        data_source:
          $ref: '#/components/schemas/ScoresDataSource'
        model_id:
          type: string
          format: uuid
          description: Model uuid
        binary_threshold:
          type: number
          description: Threshold for binary classification models
          minimum: 0.0
          maximum: 1.0
        top_k:
          type: integer
          description: Top K for ranking models
          minimum: 1
          maximum: 500
        metrics:
          type: array
          items:
            type: string
            enum:
            - AUC
            - LOG_LOSS
            - F1_SCORE
            - ACCURACY
            - PRECISION
            - RECALL
            - CONFUSION_MATRIX
            - ROC_CURVE
            - PRECISION_RECALL_CURVE
            - CALIBRATION_CURVE
            - R2
            - RMSE
            - MAE
            - ERROR_DISTRIBUTION
            - PREDICTION_SCATTERPLOT
            - MAP
            - NDCG
            - TOP_K_MEAN_SCORE
    ScoresDataSource:
      oneOf:
      - $ref: '#/components/schemas/ScoresEnvDataSource'
      - $ref: '#/components/schemas/ScoresSqlSliceQueryDataSource'
      - $ref: '#/components/schemas/ScoresFqlDataSource'
    ScoresEnvDataSource:
      type: object
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - ENVIRONMENT
        env_id:
          type: string
          format: uuid
          description: Env uuid
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        num_samples:
          type: integer
          description: Max records to fetch for scoring
          minimum: 1
          maximum: 500000
    ScoresSqlSliceQueryDataSource:
      type: object
      required:
      - source_type
      - query
      properties:
        source_type:
          type: string
          enum:
          - SQL_SLICE_QUERY
        query:
          type: string
          description: SQL query
        num_samples:
          type: integer
          description: Max records to fetch for scoring
          minimum: 1
          maximum: 500000
    ScoresFqlDataSource:
      type: object
      required:
      - source_type
      - env_type
      properties:
        source_type:
          type: string
          enum:
          - FQL
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        env_id:
          nullable: true
          type: string
          format: uuid
          description: Env uuid
        slice_definition:
          type: string
          description: Segment definition
        segment_id:
          nullable: true
          type: string
          format: uuid
          description: Segment uuid
        time_filter:
          $ref: '#/components/schemas/TimeFilter'
        num_samples:
          type: integer
          description: Max records to fetch for scoring
          minimum: 1
          maximum: 500000
    ScoresResponse:
      oneOf:
      - $ref: '#/components/schemas/ScoresRegressionResponse'
      - $ref: '#/components/schemas/ScoresBinaryClassificationResponse'
      - $ref: '#/components/schemas/ScoresMultiClassClassificationResponse'
      - $ref: '#/components/schemas/ScoresRankingResponse'
    ScoresRegressionResponse:
      type: object
      required:
      - model_task
      - total_samples
      - valid_samples
      - targets
      - predictions
      - error_distribution
      properties:
        model_task:
          type: string
          enum:
          - REGRESSION
        total_samples:
          type: integer
          example: 10000
        valid_samples:
          type: integer
          example: 9500
        r_squared:
          type: number
          example: 0.6934094625050112
        root_mean_squared_error:
          type: number
          example: 0.43712324037225403
        mean_absolute_error:
          type: number
          example: 0.34032740270302
        predictions:
          type: array
          items:
            type: number
          example:
          - 6.346766948699951
          - 5.74676698811151
        targets:
          type: array
          items:
            type: number
          example:
          - 6
          - 5
        error_distribution:
          $ref: '#/components/schemas/ErrorDistribution'
    ScoresBinaryClassificationResponse:
      type: object
      required:
      - model_task
      - total_samples
      - valid_samples
      properties:
        model_task:
          type: string
          enum:
          - BINARY_CLASSIFICATION
        total_samples:
          type: integer
          example: 10000
        valid_samples:
          type: integer
          example: 9500
        auc:
          type: number
          example: 0.9354554635924722
        log_loss:
          type: number
          example: 0.2637920823961373
        f1_score:
          type: number
          example: 0.6707317073170732
        accuracy:
          type: number
          example: 0.892
        precision:
          type: number
          example: 0.8870967741935484
        recall:
          type: number
          example: 0.5392156862745098
        confusion_matrix:
          $ref: '#/components/schemas/ConfusionMatrix'
        calibration_curve:
          $ref: '#/components/schemas/CalibrationCurve'
        precision_recall_curve:
          $ref: '#/components/schemas/PrecisionRecallCurve'
        roc_curve:
          $ref: '#/components/schemas/RocCurve'
    ScoresMultiClassClassificationResponse:
      type: object
      required:
      - model_task
      - total_samples
      - valid_samples
      properties:
        model_task:
          type: string
          enum:
          - MULTICLASS_CLASSIFICATION
        total_samples:
          type: integer
          example: 10000
        valid_samples:
          type: integer
          example: 9500
        accuracy:
          type: number
          example: 0.6229
        f1_score:
          type: number
          example: 0.6229
        log_loss:
          type: number
          example: 0.7753224258287094
        confusion_matrix:
          $ref: '#/components/schemas/ConfusionMatrixMulticlass'
    ScoresRankingResponse:
      type: object
      required:
      - model_task
      - is_binary_ranking_model
      - total_samples
      - valid_samples
      properties:
        model_task:
          type: string
          enum:
          - RANKING
        is_binary_ranking_model:
          type: boolean
        total_samples:
          type: integer
          example: 10000
        valid_samples:
          type: integer
          example: 9500
        map:
          type: number
          example: 0.12155080034826872
        ndcg:
          type: number
          example: 0.12616757949512272
        top_k_mean_score:
          $ref: '#/components/schemas/TopKMeanScore'
    ConfusionMatrix:
      type: object
      properties:
        tp:
          type: integer
          example: 110
        tn:
          type: integer
          example: 782
        fp:
          type: integer
          example: 14
        fn:
          type: integer
          example: 94
    CalibrationCurve:
      type: object
      properties:
        fraction_of_positives:
          type: array
          items:
            type: number
          example:
          - 0.002
        mean_predicted_value:
          type: array
          items:
            type: number
          example:
          - 0.011457310620268222
    PrecisionRecallCurve:
      type: object
      properties:
        precisions:
          type: array
          items:
            type: number
          example:
          - 0.20396515470111146
        recalls:
          type: array
          items:
            type: number
          example:
          - 1.0
        thresholds:
          type: array
          items:
            type: number
          example:
          - 0.005939082209609516
    RocCurve:
      type: object
      properties:
        fpr:
          type: array
          items:
            type: number
          example:
          - 0.0
        tpr:
          type: array
          items:
            type: number
          example:
          - 0.0
        thresholds:
          type: array
          items:
            type: number
          example:
          - 1.0
    TopKMeanScore:
      type: object
      properties:
        mean_scores:
          type: array
          items:
            type: number
          example:
          - -0.8083528706335152
          - 0.4732407096140612
        targets:
          type: array
          items:
            oneOf:
            - type: string
            - type: integer
          description: Targets can be an array of strings or integers
          example:
          - Churned
          - Not Churned
    ConfusionMatrixMulticlass:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: integer
    ErrorDistribution:
      type: object
      properties:
        count:
          type: array
          items:
            type: integer
          example:
          - 2
          - 6
        bins:
          type: array
          items:
            type: number
          example:
          - 0.0
          - 1.0
          - 2.0
    MutualInformationRequestBody:
      type: object
      required:
      - model_id
      - query
      - column_name
      properties:
        model_id:
          type: string
          format: uuid
          description: model uuid
        query:
          type: string
          description: SQL query
        column_name:
          type: string
          description: Column name to use as reference to compute mutual information
        num_samples:
          type: integer
          description: Max records to fetch for mutual information analysis
          minimum: 1
          maximum: 500000
        normalized:
          type: boolean
          description: If normalized is True, compute Normalized Mutual Information
    MutualInformationResponse:
      type: object
    SliceStatisticsRequestBody:
      type: object
      required:
      - model_id
      - query
      properties:
        model_id:
          type: string
          format: uuid
          description: model uuid
        query:
          type: string
          description: SQL query
    SliceStatisticsResponse:
      type: object
    PrecomputeFeatureImpactRequestBody:
      type: object
      description: Request body for precompute feature impact
      required:
      - model_id
      - env_id
      - env_type
      properties:
        model_id:
          type: string
          format: uuid
          description: Unique identifier for model.
        env_id:
          type: string
          format: uuid
          description: Unique identifier for environment.
        env_type:
          type: string
          description: Type of environment. Either PRE_PRODUCTION or PRODUCTION.
        num_refs:
          type: integer
          description: Number of reference points used in the explanations
          minimum: 1
          maximum: 1000000
        num_iterations:
          type: integer
          description: The maximum number of ablated model inferences *per feature*
          minimum: 1
          maximum: 100000
        ci_level:
          type: number
          description: The confidence interval level (between 0 and 1) to use for
            all confidence intervals computed
          minimum: 0.0
          maximum: 1.0
        min_support:
          type: integer
          minimum: 1
          description: Used for TEXT models to specify a minimum support (number of
            times a specific work was present in the sample data) to retrieve top
            words. Default to 15.
    PrecomputeFeatureImportanceRequestBody:
      type: object
      required:
      - model_id
      - env_id
      - env_type
      properties:
        model_id:
          type: string
          format: uuid
        env_id:
          type: string
          format: uuid
        env_type:
          type: string
        num_refs:
          type: integer
          description: Number of reference points used in the explanations
          minimum: 1
          maximum: 1000000
        num_iterations:
          type: integer
          description: The maximum number of ablated model inferences *per feature*
          minimum: 1
          maximum: 100000
        ci_level:
          type: number
          description: The confidence interval level (between 0 and 1) to use for
            all confidence intervals computed
          minimum: 0.0
          maximum: 1.0
    PrecomputePredictionsRequestBody:
      type: object
      required:
      - model_id
      - env_id
      properties:
        model_id:
          type: string
          format: uuid
        env_id:
          type: string
          format: uuid
        batch_size:
          type: integer
          description: Batch size for predictions
          minimum: 1
          maximum: 50000
    PredictRequestBody:
      type: object
      required:
      - model_id
      - data
      properties:
        model_id:
          type: string
          format: uuid
        chunk_size:
          type: integer
        data:
          type: array
          items:
            type: object
            example:
              CreditScore: 619
              Geography: France
              Gender: Female
              Age: 42
              Tenure: 2
              Balance: 0.0
              NumOfProducts: 1
              HasCrCard: 'Yes'
              IsActiveMember: 'Yes'
              EstimatedSalary: 101348.88
    PredictResponse:
      type: object
      properties:
        predictions:
          type: array
          items:
            type: object
            example:
              probability_christian: 0.706
    TimeFilter:
      type: object
      properties:
        start_time:
          type: string
          example: '2023-12-12T00:00:00'
          description: Start time string.
        end_time:
          type: string
          example: '2024-01-15T23:59:59'
          description: End time string.
        time_zone:
          type: string
          example: UTC
          description: Time zone.
    AnalyticMetricsRequestBody:
      type: object
      required:
      - model_id
      - metrics
      - env_type
      properties:
        model_id:
          type: string
          format: uuid
        metrics:
          type: array
          items:
            type: object
            properties:
              id:
                oneOf:
                - type: string
                  enum:
                  - jsd
                  - psi
                  - accuracy
                  - tpr
                  - recall
                  - fpr
                  - precision
                  - auc
                  - f1 score
                  - binary cross entropy
                  - auroc
                  - g mean
                  - callibrated threshold
                  - data count
                  - expected callibration error
                  - r2
                  - mse
                  - mae
                  - mape
                  - wmape
                  - log loss
                  - log loss count
                  - map
                  - mean_ndcg
                  - query count
                  - missing value
                  - range violation
                  - type violation
                  - traffic
                  - latency
                  - error
                  - average
                  - distribution
                  description: Unique enum of the metric
                - type: string
                  format: uuid
                  description: Unique identifier of the saved custom metric
              column:
                type: string
                example: Country
              category:
                oneOf:
                - type: string
                - type: integer
                - type: number
                - type: boolean
                example: Italy
              baseline_id:
                type: string
                format: uuid
          required:
          - id
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
          description: Type of data to use for analysis
        env_id:
          type: string
          format: uuid
        time_range:
          $ref: '#/components/schemas/TimeRange'
        segment_definition:
          type: string
        segment_id:
          type: string
          format: uuid
        binary_threshold:
          type: number
        top_k:
          type: integer
    AnalyticMetricsResponse:
      type: array
      items:
        type: number
    TimeRange:
      type: object
      properties:
        start_time:
          type: string
          format: date-time
          example: '2023-12-12T00:00:00'
        end_time:
          type: string
          format: date-time
          example: '2024-01-15T23:59:59'
    UploadIdCompact:
      type: object
      title: UploadIdCompact
      description: Compact version of upload id which can be included in the response
        of relevant APIs
      required:
      - upload_id
      properties:
        upload_id:
          type: string
    ModelFactoryRequest:
      type: object
      required:
      - file_id
      properties:
        file_id:
          type: string
          format: uuid
        spec:
          $ref: '#/components/schemas/ModelSpecObject'
        max_cardinality:
          type: integer
          minimum: 1
          maximum: 100000
          default: 1000
        sample_size:
          type: integer
          minimum: 10000
          maximum: 100000
          default: 10000
    ModelFactoryResponse:
      type: object
      properties:
        schema:
          $ref: '#/components/schemas/ModelSchemaObject'
        spec:
          $ref: '#/components/schemas/ModelSpecObject'
    XaiParams:
      type: object
      description: XAI parameters set for a model
      properties:
        custom_explain_methods:
          type: array
          description: User-defined explain_custom method of the model object defined
            in package.py
          items:
            type: string
        default_explain_method:
          type: string
          description: Default explanation method
    ModelColumnsDataTypeEnum:
      type: string
      description: Data type of the column
      enum:
      - int
      - float
      - str
      - bool
      - category
      - timestamp
      - vector
    ModelTaskParams:
      type: object
      properties:
        binary_classification_threshold:
          type: number
          description: Threshold for labels.
        target_class_order:
          type: array
          description: If target is categorical, used to map the categories to a scale
            of relevance
          items:
            anyOf:
            - type: string
            - type: number
            - type: boolean
        group_by:
          type: string
          description: Query/session id column for ranking models.
        top_k:
          type: integer
          description: Top k results to consider when computing ranking metrics.
        class_weights:
          type: array
          description: Weight of each class.
          items:
            type: number
        weighted_ref_histograms:
          description: Whether baseline histograms must be weighted or not when calculating
            drift metrics.
          type: boolean
    ModelSpecObject:
      type: object
      properties:
        schema_version:
          type: integer
          description: Schema version. Internally used. Leave empty.
          default: 1
        inputs:
          type: array
          description: List of input columns
          items:
            type: string
        outputs:
          type: array
          description: List of output columns
          items:
            type: string
        targets:
          type: array
          description: List of target columns
          items:
            type: string
        decisions:
          type: array
          description: List of decision columns
          items:
            type: string
        metadata:
          type: array
          description: List of metadata columns
          items:
            type: string
        custom_features:
          type: array
          description: List of custom feature columns
          items:
            $ref: '#/components/schemas/CustomFeature'
    CustomFeature:
      type: object
      required:
      - name
      properties:
        type:
          type: string
          enum:
          - FROM_COLUMNS
          - FROM_VECTOR
          - FROM_TEXT_EMBEDDING
          - FROM_IMAGE_EMBEDDING
        name:
          description: Name of the custom feature
          type: string
        columns:
          type: array
          items:
            type: string
        centroids:
          type: array
          items:
            type: number
        tf_idf:
          type: array
          items:
            type: object
        n_clusters:
          type: integer
        monitor_components:
          type: boolean
    ModelSchemaColumnObject:
      type: object
      description: A model column representation
      required:
      - id
      properties:
        id:
          type: string
          description: Internal column identifier
        name:
          type: string
          description: Column name
        data_type:
          $ref: '#/components/schemas/ModelColumnsDataTypeEnum'
        min:
          type: number
          description: Min value of integer/float column
        max:
          type: number
          description: Max value of integer/float column
        categories:
          type: array
          description: List of unique values of a categorical column
          items:
            anyOf:
            - type: string
            - type: number
            - type: boolean
        bins:
          type: array
          description: Bins of integer/float column
          items:
            type: number
        replace_with_nulls:
          type: array
          description: Replace the list of given values to null if found in the events
            data
          items:
            anyOf:
            - type: string
            - type: number
            - type: boolean
        n_dimensions:
          type: integer
          description: Number of dimensions of a vector column
    ModelColumns:
      type: array
      description: List of ModelSchemaColumn
      items:
        $ref: '#/components/schemas/ModelSchemaColumnObject'
    ModelSchemaObject:
      type: object
      description: Model schema with the details of each column
      properties:
        schema_version:
          type: integer
          description: Schema version
          default: 1
        columns:
          type: array
          items:
            $ref: '#/components/schemas/ModelSchemaColumnObject'
    ModelArtifactsResponse:
      type: object
      required:
      - name
      - size
      - modified
      properties:
        name:
          type: string
        size:
          type: integer
        modified:
          type: string
          format: date-time
    ModelFilesObject:
      type: array
      items:
        $ref: '#/components/schemas/ModelArtifactsResponse'
    ModelDetailResponse:
      required:
      - id
      - name
      - input_type
      - task
      - organization
      - project
      - created_at
      - updated_at
      allOf:
      - $ref: '#/components/schemas/ModelObject'
      - type: object
        properties:
          task_params:
            $ref: '#/components/schemas/ModelTaskParams'
          schema:
            $ref: '#/components/schemas/ModelSchemaObject'
          spec:
            $ref: '#/components/schemas/ModelSpecObject'
          event_id_col:
            type: string
            description: Event id column to be found in published data for the model
          event_ts_col:
            type: string
            description: Timestamp column to be found in published data for the model
          event_ts_format:
            type: string
            description: Format of the timestamp like datetime, epoch time etc.
          xai_params:
            $ref: '#/components/schemas/XaiParams'
          artifact_files:
            $ref: '#/components/schemas/ModelFilesObject'
          is_binary_ranking_model:
            type: boolean
    UpdateModelRequest:
      type: object
      properties:
        xai_params:
          $ref: '#/components/schemas/XaiParams'
        description:
          type: string
          nullable: true
        display_name:
          type: string
          nullable: true
          description: Display name for the model
        event_id_col:
          type: string
          nullable: true
          description: Event id column to be found in published data for the model
        event_ts_col:
          type: string
          nullable: true
          description: Timestamp column to be found in published data for the model
        event_ts_format:
          type: string
          nullable: true
          description: Format of the timestamp like datetime, epoch time etc.
    AddModelRequestBody:
      type: object
      required:
      - name
      - project_id
      - input_type
      - task
      - schema
      - spec
      properties:
        name:
          type: string
          description: Name of the model
        version:
          type: string
          minLength: 1
          maxLength: 64
          default: v1
          description: Version of the model
        project_id:
          type: string
          format: uuid
          description: UUID format unique identifier for the project the model is
            added in
        input_type:
          $ref: '#/components/schemas/ModelInputTypeEnum'
        task:
          $ref: '#/components/schemas/ModelTaskEnum'
        schema:
          $ref: '#/components/schemas/ModelSchemaObject'
        spec:
          $ref: '#/components/schemas/ModelSpecObject'
        task_params:
          $ref: '#/components/schemas/ModelTaskParams'
        xai_params:
          $ref: '#/components/schemas/XaiParams'
        description:
          type: string
          nullable: true
          description: Description of the model
        algorithm:
          type: string
          nullable: true
          description: Model algorithm
        framework:
          type: string
          nullable: true
          description: A string providing information about the software library and
            version used to train and run this model
        event_id_col:
          type: string
          nullable: true
          description: Event id column to be found in published data for the model
        event_ts_col:
          type: string
          nullable: true
          description: Timestamp column to be found in published data for the model
        event_ts_format:
          type: string
          nullable: true
          description: Format of the timestamp like datetime, epoch time etc.
    GridProps:
      type: object
      title: GridProps
      required:
      - position_x
      - position_y
      - width
      - height
      properties:
        position_x:
          type: number
        position_y:
          type: number
        width:
          type: number
        height:
          type: number
      additionalProperties: false
    DashboardLayout:
      type: object
      title: DashboardLayout
      required:
      - chart_uuid
      - grid_props
      properties:
        chart_uuid:
          type: string
          format: uuid
        grid_props:
          $ref: '#/components/schemas/GridProps'
        options:
          type: object
    DefaultDashboard:
      title: DefaultDashboard
      allOf:
      - type: object
        properties:
          dashboard_uuid:
            type: string
            format: uuid
    UpdateDefaultDashboardRequest:
      title: UpdateDefaultDashboard
      allOf:
      - type: object
        properties:
          dashboard_uuid:
            type: string
            format: uuid
    _DeploymentParams:
      type: object
      properties:
        deployment_type:
          type: string
          enum:
          - BASE_CONTAINER
          description: Model deployment type
        image_uri:
          type: string
          description: Model deployment docker image uri
        replicas:
          type: integer
          description: Number of model deployment pods to be active
          example: 2
          minimum: 1
          maximum: 10
          default: 1
        cpu:
          type: integer
          description: Amount of millicpus to allocate per replica
          example: 500
          minimum: 1
          maximum: 4000
          default: 1
        memory:
          type: integer
          description: Amount of MiBs to allocate per replica
          example: 512
          minimum: 150
          maximum: 16384
          default: 150
    _SurrogateDeploymentParams:
      description: Additoinal paramteres specified to deploy surrogate model
      allOf:
      - type: object
        properties:
          artifact_type:
            description: Type of the artifact
            type: string
            enum:
            - SURROGATE
      - $ref: '#/components/schemas/_DeploymentParams'
    DeploySurrogateRequest:
      type: object
      description: Request payload for to deploy a surrogate model
      required:
      - env_id
      - deployment_params
      properties:
        env_id:
          type: string
          format: uuid
          description: Unique identifier of the environment associated to the model
        deployment_params:
          $ref: '#/components/schemas/_SurrogateDeploymentParams'
    ListModelResponse:
      type: array
      items:
        $ref: '#/components/schemas/ModelObject'
    DeleteModelResponse:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/JobCompact'
    ServerInfoResponse:
      type: object
      properties:
        server_version:
          type: string
          example: 23.6.0
          description: The version of the Fiddler server.
        feature_flags:
          type: object
          properties:
            fairness:
              type: boolean
              example: false
              description: Indicates if the fairness feature is enabled on the server.
            enable_rca_performance_tab_ui:
              type: boolean
              example: false
            enable_rca_analyze_tab_ui:
              type: boolean
              example: true
            enable_segments_ui:
              type: boolean
              example: true
            enable_webhooks_ui:
              type: boolean
              example: true
            enable_unity_analyze_charts_ui:
              type: boolean
              example: false
            enable_xai_umap:
              type: boolean
              example: false
            enable_deckgl_ui:
              type: boolean
              example: false
            enable_unity_embeddings_ui:
              type: boolean
              example: false
            enable_dashboard_markdown_ui:
              type: boolean
              example: false
            enable_deckgl_advanced_selection_ui:
              type: boolean
              example: false
            enable_trace_ui:
              type: boolean
              example: false
            enable_unity_monitoring_charts_ui:
              type: boolean
              example: false
            enable_model_metrics_api:
              type: boolean
              example: true
            enable_dimensionality_reduction_api:
              type: boolean
              example: false
            enable_custom_metrics:
              type: boolean
              example: false
            enable_posthog:
              type: boolean
              example: true
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
    ModelDeploymentResponse:
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
          model:
            $ref: '#/components/schemas/ModelCompact'
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          artifact_type:
            $ref: '#/components/schemas/ArtifactTypeEnum'
          deployment_type:
            type: string
            enum:
            - BASE_CONTAINER
          active:
            type: boolean
          image_uri:
            type: string
          replicas:
            type: integer
          cpu:
            type: integer
            description: In millcpu
          memory:
            type: integer
            description: In mebibytes
      - $ref: '#/components/schemas/CreateAndUpdateMetaDetails'
    ModelDeploymentUpdateRequest:
      type: object
      properties:
        active:
          type: boolean
        replicas:
          type: integer
          minimum: 1
          maximum: 10
        cpu:
          type: integer
          description: In millcpu
          minimum: 10
          maximum: 4000
        memory:
          type: integer
          description: In mebibytes
          minimum: 150
          maximum: 16384
    ModelDeploymentUpdateResponse:
      allOf:
      - $ref: '#/components/schemas/ModelDeploymentResponse'
      - type: object
        properties:
          job:
            $ref: '#/components/schemas/JobCompact'
    ChartModelCompact:
      type: object
      title: Chart ModelCompact
      description: Compact version of model for chart v3
      required:
      - id
      - name
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    ChartSegmentCompact:
      type: object
      title: Chart SegmentCompact
      description: Compact version of segment for chart v3
      properties:
        id:
          type: string
          format: uuid
        definition:
          type: string
          description: FQL definition
    QueryType:
      type: string
      enum:
      - MONITORING
      - EMBEDDING
      - ANALYTICS
    QueryMonitoringResponse:
      type: object
      title: Monitoring query response structure
      description: Monitoring query response structure
      required:
      - query_key
      - model
      - baseline
      - metric
      - columns
      properties:
        query_key:
          type: string
          format: uuid
        model:
          $ref: '#/components/schemas/ChartModelCompact'
        baseline_id:
          type: string
          format: uuid
        metric:
          type: string
        metric_type:
          type: string
        columns:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        segment_id:
          type: string
          format: uuid
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        viz_type:
          type: string
          enum:
          - line
          - bar
    QueryEmbeddingResponse:
      type: object
      title: Embedding query response structure
      description: Embedding query response structure
      required:
      - query_key
      - model
      - column_name
      - minimum_distance
      - number_of_neighbors
      - sample_size
      - metric_type
      - plot
      properties:
        query_key:
          type: string
          format: uuid
        model:
          $ref: '#/components/schemas/ChartModelCompact'
        column_name:
          type: string
        baseline_id:
          type: string
          format: uuid
        retrieve_columns:
          type: array
          items:
            type: string
        metric_type:
          type: string
          enum:
          - umap
          - pca
          - tsne
        minimum_distance:
          type: number
        number_of_neighbors:
          type: number
        plot:
          type: string
          enum:
          - 2D
          - 3D
        sample_size:
          type: integer
    MonitoringDataSource:
      type: object
      title: Chart data source for queries monitoring metadata
      description: Chart data source for queries monitoring metadata
      required:
      - filters
      - queries
      properties:
        query_type:
          type: string
          enum:
          - MONITORING
        time_comparison:
          type: string
          enum:
          - Previous Day
          - Previous Week
          - Previous Month
          - Previous Quarter
          - Previous Year
        filters:
          $ref: '#/components/schemas/QueryFilters'
        queries:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/QueryMonitoringResponse'
    AnalyticsDataSource:
      type: object
      title: Chart data source for analytics charts metadata
      description: Chart data source for analytics charts metadata
      required:
      - model
      - env_type
      - payload
      properties:
        query_type:
          type: string
          enum:
          - ANALYTICS
        model:
          $ref: '#/components/schemas/ChartModelCompact'
        env_type:
          type: string
          enum:
          - PRE_PRODUCTION
          - PRODUCTION
        type:
          $ref: '#/components/schemas/AnalyticsChartType'
        payload:
          $ref: '#/components/schemas/AnalyticsPayload'
        env_id:
          type: string
          format: uuid
          nullable: true
          description: Environment id, required for PRE_PRODUCTION env_type
        segment:
          $ref: '#/components/schemas/ChartSegmentCompact'
        time_filter:
          $ref: '#/components/schemas/AnalyticsTimeFilter'
    EmbeddingDataSource:
      type: object
      title: Chart data source for embedding charts metadata
      description: Chart data source for embedding charts metadata
      required:
      - filters
      - queries
      properties:
        query_type:
          type: string
          enum:
          - EMBEDDING
        filters:
          $ref: '#/components/schemas/QueryFilters'
        queries:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/QueryEmbeddingResponse'
    ChartOptions:
      type: object
      title: Chart options
      description: Chart options
      properties:
        axes:
          type: array
          items:
            type: object
            properties:
              is_xaxis:
                type: boolean
              scale:
                type: string
                enum:
                - linear
                - log
                default: linear
              orientation:
                type: string
                enum:
                - y1
                - y2
        series:
          type: array
          items:
            type: object
            properties:
              viz_type:
                type: string
                enum:
                - line
                - bar
                default: line
        customYAxis:
          type: array
          items:
            $ref: '#/components/schemas/CustomYAxis'
        hiddenQueries:
          type: array
          items:
            type: string
        queryNames:
          type: object
          additionalProperties:
            type: string
    CustomYAxis:
      type: object
      title: CustomYAxis
      properties:
        min:
          type: string
        max:
          type: string
        scale:
          type: string
          enum:
          - value
          - log
        query_keys:
          type: array
          items:
            type: string
    MetricChartOptions:
      type: object
      title: Metric Chart options
      description: Chart options for metric
      properties:
        display_name:
          type: string
          description: Name to be displayed for the metric
          example: Average monthly Salary
        unit:
          type: string
          description: Custom unit to add on the chart next to the metric value
          example: $
        unit_placement:
          type: string
          description: Indicates where to render th custom unit, before or after the
            metric value
          enum:
          - PREFIX
          - POSTFIX
          example: PREFIX
        decimal_places:
          type: integer
          description: Number of decimal points to show
          example: 1
    ChartDetails:
      title: Chart Details
      description: Chart Details
      required:
      - title
      - query_type
      - data_source
      properties:
        title:
          type: string
        description:
          type: string
        query_type:
          $ref: '#/components/schemas/QueryType'
        options:
          $ref: '#/components/schemas/ChartOptions'
        data_source:
          oneOf:
          - $ref: '#/components/schemas/MonitoringDataSource'
          - $ref: '#/components/schemas/AnalyticsDataSource'
          - $ref: '#/components/schemas/EmbeddingDataSource'
    AddChartRequestBody:
      title: Add chart request body
      description: Add chart request body
      allOf:
      - type: object
        properties:
          project_id:
            type: string
            format: uuid
      - $ref: '#/components/schemas/ChartDetails'
    Chart:
      title: Chart Detail Response
      description: Chart Detail Response
      allOf:
      - type: object
        properties:
          id:
            type: string
            format: uuid
            readOnly: true
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
          project:
            $ref: '#/components/schemas/ProjectCompact'
          created_by:
            $ref: '#/components/schemas/UserCompact'
          updated_by:
            $ref: '#/components/schemas/UserCompact'
        required:
        - id
        - organization
        - project
      - $ref: '#/components/schemas/ChartDetails'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
    ListChartResponse:
      type: array
      title: Chart List Response
      description: Chart List Response
      items:
        allOf:
        - type: object
          properties:
            id:
              type: string
              format: uuid
              readOnly: true
            title:
              type: string
            description:
              type: string
            query_type:
              $ref: '#/components/schemas/QueryType'
            chart_type:
              $ref: '#/components/schemas/ChartTypeAnalytics'
            organization:
              $ref: '#/components/schemas/OrganizationCompact'
            project:
              $ref: '#/components/schemas/ProjectCompact'
            created_by:
              $ref: '#/components/schemas/UserCompact'
            updated_by:
              $ref: '#/components/schemas/UserCompact'
          required:
          - id
          - title
          - description
          - query_type
          - organization
          - project
        - $ref: '#/components/schemas/CreateUpdateTimestamp'
    UpdateChartRequest:
      type: object
      title: Update chart request body
      description: Update chart request body
      required:
      - title
      - data_source
      - query_type
      properties:
        title:
          type: string
        description:
          type: string
        options:
          $ref: '#/components/schemas/ChartOptions'
        data_source:
          oneOf:
          - $ref: '#/components/schemas/MonitoringDataSource'
          - $ref: '#/components/schemas/AnalyticsDataSource'
          - $ref: '#/components/schemas/EmbeddingDataSource'
    QueryMonitoringRequestFields:
      type: object
      title: Monitoring query request fields
      description: Monitoring query request fields
      required:
      - query_key
      - model_id
      - baseline_id
      - metric
      - columns
      properties:
        query_key:
          type: string
          format: uuid
        model_id:
          type: string
          format: uuid
        baseline_id:
          type: string
          format: uuid
        metric:
          type: string
        columns:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string
        segment_id:
          type: string
          format: uuid
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        viz_type:
          type: string
          enum:
          - line
          - bar
    MonitoringQueryRequestObject:
      type: object
      title: Monitoring queries request object
      description: Monitoring queries request object
      properties:
        time_comparison:
          type: string
          enum:
          - Previous Day
          - Previous Week
          - Previous Month
          - Previous Quarter
          - Previous Year
        query_type:
          $ref: '#/components/schemas/QueryType'
        filters:
          $ref: '#/components/schemas/QueryFilters'
        queries:
          type: array
          items:
            $ref: '#/components/schemas/QueryMonitoringRequestFields'
    MonitoringQueryRequest:
      allOf:
      - type: object
        properties:
          project_id:
            type: string
            format: uuid
        required:
        - organization_id
        - project_id
      - $ref: '#/components/schemas/MonitoringQueryRequestObject'
    MonitoringQueryResponseObject:
      type: object
      required:
      - query_key
      - model
      - baseline
      - metric
      - viz_type
      - col_names
      - data
      properties:
        query_key:
          type: string
          format: uuid
        model:
          $ref: '#/components/schemas/ModelCompact'
        baseline:
          $ref: '#/components/schemas/BaselineCompact'
        segment:
          $ref: '#/components/schemas/SegmentCompact'
        metric:
          type: string
        viz_type:
          type: string
          enum:
          - line
          - bar
        columns:
          type: array
          items:
            type: string
        col_names:
          type: array
          uniqueItems: true
          items:
            type: string
        data:
          type: array
          items:
            type: array
            items:
              anyOf:
              - type: string
              - type: number
              - type: integer
              - type: boolean
                nullable: true
    MonitoringQueryResponse:
      type: object
      required:
      - organization
      - project
      - query_type
      - filters
      properties:
        organization:
          $ref: '#/components/schemas/OrganizationCompact'
        project:
          $ref: '#/components/schemas/ProjectCompact'
        time_comparison:
          type: string
          enum:
          - Previous Day
          - Previous Week
          - Previous Month
          - Previous Quarter
          - Previous Year
          - null
          nullable: true
        query_type:
          $ref: '#/components/schemas/QueryType'
        filters:
          $ref: '#/components/schemas/QueryFilters'
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/MonitoringQueryResponseObject'
    AnalyticsChartType:
      type: string
      enum:
      - PERFORMANCE
      - METRICS
      - FEATURE_ANALYTICS
    PerformanceChartType:
      type: string
      enum:
      - CONFUSION_MATRIX
      - ROC_CURVE
      - PRECISION_RECALL_CURVE
      - CALIBRATION_CURVE
      - ERROR_DISTRIBUTION
      - PREDICTION_SCATTERPLOT
    AnalyticsPayload:
      oneOf:
      - $ref: '#/components/schemas/PerformancePayload'
      - $ref: '#/components/schemas/MetricsPayload'
      - $ref: '#/components/schemas/FeatureAnalyticsPayload'
    PerformancePayload:
      type: object
      properties:
        response_type:
          type: string
          enum:
          - PERFORMANCE
        chart_type:
          $ref: '#/components/schemas/PerformanceChartType'
        binary_threshold:
          type: number
          description: Threshold for binary classification models
          minimum: 0.0
          maximum: 1.0
        top_k:
          type: integer
          description: Top K for ranking models
          minimum: 1
          maximum: 500
        num_samples:
          type: integer
          description: Max records to fetch for performance charts
          minimum: 1
          maximum: 500000
        labels:
          type: array
          items:
            type: string
          nullable: true
    MetricsPayload:
      type: object
      required:
      - chart_type
      - metrics
      properties:
        response_type:
          type: string
          enum:
          - METRICS
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/MetricsCompact'
        binary_threshold:
          type: number
          description: Threshold for binary classification models
          minimum: 0.0
          maximum: 1.0
        top_k:
          type: integer
          description: Top K for ranking models
          minimum: 1
          maximum: 500
    MetricsCompact:
      type: object
      required:
      - id
      properties:
        id:
          type: string
          description: Metric name (accuracy, precision, jsd, ...) or UUID of the
            custom metric
        column:
          type: string
          description: Column name to compute the metric on (only for some metrics)
        category:
          oneOf:
          - type: string
          - type: integer
          - type: number
          - type: boolean
          description: Category to compute the metric on for categorical column
        baseline_id:
          type: string
          format: uuid
          description: Baseline uuid to compute the metric with (only for some metrics)
        options:
          $ref: '#/components/schemas/MetricChartOptions'
    FeatureAnalyticsPayload:
      type: object
      required:
      - visualization
      - columns
      properties:
        response_type:
          type: string
          enum:
          - FEATURE_ANALYTICS
        visualization:
          type: string
          enum:
          - FEATURE_DISTRIBUTION
          - FEATURE_CORRELATION
          - CORRELATION_MATRIX
        columns:
          description: list of column names for the analysis
          type: array
          items:
            type: string
            nullable: false
        num_samples:
          type: integer
          minimum: 1
          maximum: 10000
          description: Max number of samples to represent for line plot and scatter
            plot
        num_bins:
          type: integer
          minimum: 1
          maximum: 1000
          description: Number of bins, only used for line plot and feature distribution
        config:
          oneOf:
          - $ref: '#/components/schemas/FeatureCorrelationConfig'
          - $ref: '#/components/schemas/FeatureDistributionConfig'
    AnalyticsTimeFilter:
      type: object
      properties:
        time_label:
          type: string
          enum:
          - yesterday
          - today
          - 7d
          - 30d
          - 90d
          - 6m
          - 12m
          - ytd
          - null
          nullable: true
        time_range:
          type: object
          nullable: true
          properties:
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
          required:
          - start_time
          - end_time
        time_zone:
          type: string
          default: Etc/GMT
    FeatureCorrelationConfig:
      type: object
      properties:
        config_type:
          type: string
          enum:
          - CORRELATION
        visualization:
          description: Preferred type of visualization for feature correlation
          type: string
          enum:
          - LINE_PLOT
          - SCATTER_PLOT
          - STACKED_PLOT
          - BOX_PLOT
        x_axis_column:
          type: string
          description: Column name to use as the x-axis in the chart
    ChartTypeAnalytics:
      type: string
      title: Analytic chart type
      description: Chart type for ANALYTICS query type
      enum:
      - PERFORMANCE
      - METRICS
      - FEATURE_ANALYTICS
    ProjectRequest:
      type: object
      title: ProjectRequest
      description: Request body for creating a project
      required:
      - name
      properties:
        name:
          description: Name of the project
          type: string
    Projects:
      type: array
      description: List of projects
      items:
        $ref: '#/components/schemas/Project'
    Project:
      type: object
      description: Details of the project
      required:
      - id
      - name
      - organization
      - created_at
      - updated_at
      allOf:
      - type: object
        properties:
          id:
            description: Unique identifier of the project
            type: string
            format: uuid
          name:
            description: Name of the project
            type: string
          organization:
            $ref: '#/components/schemas/OrganizationCompact'
      - $ref: '#/components/schemas/CreateUpdateTimestamp'
  responses:
    '200':
      description: Success
      content: {}
    '202':
      description: The request has been accepted for processing, but the processing
        has not been completed. The request might or might not be eventually acted
        upon, and may be disallowed when processing occurs.
      content: {}
    '204':
      description: The server successfully processed the request, and is not returning
        any content
      content: {}
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '404':
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '501':
      description: Server does not support this action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    '503':
      description: Upstream connect error or disconnect/reset before headers
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  parameters:
    project_id_query:
      name: project_id
      in: query
      description: project id query parameter
      required: false
      schema:
        type: string
        format: uuid
    model_id:
      name: model_id
      in: path
      description: model id path parameter
      required: true
      schema:
        type: string
        format: uuid
    trace_id:
      name: trace_id
      in: path
      description: trace id path parameter
      required: true
      schema:
        type: string
        format: uuid
    span_id:
      name: span_id
      in: path
      description: span id path parameter
      required: true
      schema:
        type: string
        format: uuid
    model_id_query_required:
      name: model_id
      in: query
      description: model id parameter in uuid format
      required: true
      schema:
        type: string
        format: uuid
    model_id_query:
      name: model_id
      in: query
      description: model id query parameter
      required: false
      schema:
        type: string
        format: uuid
    name:
      name: name
      in: query
      description: Entity's name
      required: false
      schema:
        type: string
    baseline_name:
      name: baseline_name
      in: query
      description: baseline_name in query parameter
      required: true
      schema:
        type: string
    baseline_name_optional:
      name: baseline_name
      in: query
      description: baseline_name in query parameter
      required: false
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Limit for the pagination
      required: false
      schema:
        type: integer
    offset:
      name: offset
      in: query
      description: Offset for the pagination
      required: false
      schema:
        type: integer
    organization_name:
      name: organization_name
      in: query
      description: organization_name query parameter
      required: true
      schema:
        type: string
    client_version:
      name: client_version
      in: query
      description: fiddler-client version query parameter
      required: true
      schema:
        type: string
    client_name:
      name: client_name
      in: query
      description: client_name query parameter
      required: true
      schema:
        type: string
    filter:
      name: filter
      in: query
      description: Allows you to filter by any field.
      required: false
      schema:
        type: string
    organization_name_path:
      name: organization_name
      in: path
      description: organization_name path parameter
      required: true
      schema:
        type: string
    project_name:
      name: project_name
      in: query
      description: project_name query parameter
      required: true
      schema:
        type: string
    project_name_query_optional:
      name: project_name
      in: query
      description: project_name query parameter
      required: false
      schema:
        type: string
    project_name_path:
      name: project_name
      in: path
      description: project_name path parameter
      required: true
      schema:
        type: string
    dataset_name:
      name: dataset_name
      in: query
      description: dataset_name query parameter
      required: true
      schema:
        type: string
    dataset_name_path:
      name: dataset_name
      in: path
      description: dataset_name path parameter
      required: true
      schema:
        type: string
    model_name:
      name: model_name
      in: query
      description: model_name query parameter
      required: true
      schema:
        type: string
    model_name_optional:
      name: model_name
      in: query
      description: model_name query parameter
      required: false
      schema:
        type: string
    model_name_path:
      name: model_name
      in: path
      description: model_name path parameter
      required: true
      schema:
        type: string
    project_role_id_path:
      name: id
      in: path
      description: Id of the project role
      required: true
      schema:
        type: integer
    segment_name:
      name: segment_name
      in: query
      description: segment_name query parameter
      required: true
      schema:
        type: string
    ordering:
      name: ordering
      in: query
      description: Allows you to order results by any field. For desc order prefix
        field name with `-` and provide comman separated values for multiple fields
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      description: Allows you to search by any field.
      required: false
      schema:
        type: string
    invitation_id_path:
      name: invitation_id
      in: path
      description: unique identifier
      required: true
      schema:
        type: integer
    user_data_id_path:
      name: user_data_id
      in: path
      description: unique identifier
      required: true
      schema:
        type: integer
    user_id_path:
      name: user_id
      in: path
      description: unique identifier
      required: true
      schema:
        type: integer
    start_time:
      name: start_time
      in: query
      description: requested start time
      required: true
      schema:
        type: string
        format: date-time
    end_time:
      name: end_time
      in: query
      description: requested end time
      required: true
      schema:
        type: string
        format: date-time
    start_time_optional:
      name: start_time
      in: query
      description: requested start time
      required: false
      schema:
        type: string
        format: date-time
    end_time_optional:
      name: end_time
      in: query
      description: requested end time
      required: false
      schema:
        type: string
        format: date-time
    uuid_path:
      name: uuid
      in: path
      description: uuid path parameter
      required: true
      schema:
        type: string
        format: uuid
    id_path:
      name: id
      in: path
      description: id path parameter
      required: true
      schema:
        type: string
        format: uuid
    alert_type:
      name: alert_type
      in: query
      description: Alert Type
      required: false
      schema:
        type: string
        enum:
        - DRIFT
        - DATA_INTEGRITY
        - PERFORMANCE
        - SERVICE_METRICS
    metric:
      name: metric
      in: query
      description: metric
      required: false
      schema:
        type: string
        enum:
        - JSD
        - PSI
        - ACCURACY
        - TPR
        - RECALL
        - FPR
        - PRECISION
        - AUC
        - F1 SCORE
        - R2
        - MSE
        - MAE
        - MAPE
        - WMAPE
        - LOG LOSS
        - MISSING VALUE
        - RANGE VIOLATION
        - TYPE VIOLATION
        - TRAFFIC
        - LATENCY
        - ERROR
    feature_name:
      name: feature_name
      in: query
      description: Name of the Feature
      required: false
      schema:
        type: string
    list_alert_config_uuid:
      name: alert_config_uuid_list
      in: query
      description: list of all uuid for the alert configs loaded in that page
      required: true
      schema:
        type: array
        items:
          type: string
          format: uuid
    deployment_params:
      name: deployment_params
      in: query
      description: JSON encoded Deployment Params
      schema:
        type: string
        properties:
          deployment_type:
            type: string
            enum:
            - BASE_CONTAINER
            description: Model deployment type
          image_uri:
            type: string
            description: Model deployment docker image uri
          replicas:
            type: integer
            description: Number of model deployment pods to be active
            example: 2
            minimum: 1
            maximum: 10
          cpu:
            type: integer
            description: Amount of millicpus to allocate per replica
            example: 500
            minimum: 1
            maximum: 4000
          memory:
            type: integer
            description: Amount of MiBs to allocate per replica
            example: 512
            minimum: 150
            maximum: 16384
    upload_id:
      name: upload_id
      in: query
      description: ID for the upload
      required: true
      schema:
        type: string
    parts:
      name: parts
      in: query
      description: List of parts
      required: true
      schema:
        type: array
        items:
          $ref: '#/components/schemas/PartCompact'
    part_number:
      name: part_number
      in: query
      description: Part number of the upload
      required: true
      schema:
        type: integer
    fiddler_version_header:
      name: X-Fiddler-Client-Version
      in: header
      description: Fiddler Client Version
      required: true
      schema:
        type: string
    no_cache_optional:
      name: no_cache
      in: query
      description: If true, then it will not use the cached data
      required: false
      schema:
        type: boolean
    verbose:
      name: verbose
      in: query
      description: flag for extras in response
      required: false
      schema:
        type: boolean
    bin_size:
      name: bin_size
      in: query
      required: true
      schema:
        type: string
        default: Hour
        enum:
        - Hour
        - Day
        - Week
        - Month
        - Quarter
    time_zone:
      name: time_zone
      in: query
      required: true
      schema:
        type: string
        default: Etc/GMT
    column_id:
      name: column_id
      in: path
      description: column_id path parameter
      required: true
      schema:
        type: string
    column_id_query_required:
      name: column_id
      in: query
      description: column_id parameter
      required: true
      schema:
        type: string
    baseline:
      name: baseline
      in: query
      required: true
      schema:
        type: string
    max_bins:
      name: max_bins
      in: query
      required: false
      schema:
        type: number
        format: int
    env_id:
      name: env_id
      in: path
      description: environment id path parameter
      required: true
      schema:
        type: string
        format: uuid
    type:
      name: type
      in: query
      description: type of environment
      required: false
      schema:
        type: string
        enum:
        - PRE_PRODUCTION
        - PRODUCTION
    job_id:
      name: job_id
      in: path
      description: job id path parameter
      required: true
      schema:
        type: string
        format: uuid
    team_id:
      name: team_id
      in: path
      description: team id path parameter
      required: true
      schema:
        type: string
        format: uuid
    configuration_id:
      name: configuration_id
      in: path
      description: configuration id path parameter
      required: true
      schema:
        type: string
        format: uuid
    team_role_id:
      name: team_role_id
      in: path
      description: team role id path parameter
      required: true
      schema:
        type: string
        format: uuid
    baseline_id:
      name: baseline_id
      in: path
      description: baseline id path parameter
      required: true
      schema:
        type: string
        format: uuid
    alert_id:
      name: alert_id
      in: path
      description: alert id path parameter
      required: true
      schema:
        type: string
        format: uuid
    latest_only:
      name: latest_only
      in: query
      description: Whether to send only latest version of each model or all version.
        False by default
      required: false
      schema:
        type: boolean
    chart_id:
      name: chart_id
      in: path
      description: chart id path parameter
      required: true
      schema:
        type: string
        format: uuid
    project_id:
      name: project_id
      in: path
      description: Path parameter for unique identifier of a project
      required: true
      schema:
        type: string
        format: uuid
  examples:
    JobGet_Ex_1:
      value:
        api_version: '3.0'
        kind: NORMAL
        data:
          name: Ingestion dataset Upload
          info:
            resource_type: DATASET
            resource_name: bank_churn
            project_name: bank_churn
            resource:
              id: c97cd455-1e64-4e79-bd86-7bd399505678
              name: bank_churn
            model:
              id: c97cd455-1e64-4e79-bd86-7bd399505678
              name: bank_churn
              version: v1
            project:
              id: e3a4d78e-f294-4d5c-b28a-129164588a32
              name: bank_churn
          id: e9a2a782-1db4-4bb8-8db0-3fa5a278c068
          status: SUCCESS
          progress: 100
          error_message: null
          error_reason: null
          extras:
            3f5025e5-1d2f-4b0f-a955-b8cd4e43d2e8:
              status: SUCCESS
              result:
                result:
                  __org: s3bucket
                  s3_key: s3bucket//s3bucket/first_project/bank_churn/small_dataset.csv
                  __dataset: bank_churn
                  __project: first_project
                  file_type: .csv
                  s3_bucket: fiddler-bucket-staging
                  cleaned_s3_key: s3bucket//s3bucket/first_project/bank_churn/cleaned/small_dataset.csv
                  cleaned_ch_table: s3bucket_first_project__dataset__bank_churn
                  violations_s3_key: s3bucket//s3bucket/first_project/bank_churn/violations/small_dataset.csv
                  violations_ch_table: null
              error_message: null
            e36d1cf2-766f-4705-8269-b6f93bf1ca14:
              status: SUCCESS
              result:
                result: Success
              error_message: null
    ModelMetricsDetails:
      value:
        api_version: '3.0'
        kind: NORMAL
        data:
          organization:
            id: ae880011-0694-467e-b487-dd020bd67bf7
            name: fiddler
          project:
            id: 5c6ebb6c-769d-42b6-9fb5-2dfb99a85b82
            name: bank_churn
          model:
            id: 87926272-96aa-4693-89d3-5db4d9c1d4b2
            name: binary_classification
            version: v1
          metrics:
          - id: jsd
            name: JSD
            type: Data Drift
            columns:
            - age
            - output
            - custom_feature_1
            requires_baseline: true
          - id: missing_value
            name: Missing Value Violation
            type: Data Integrity
            columns:
            - __ANY__
            - age
            requires_baseline: false
          - id: traffic
            name: Traffic
            type: Traffic
            requires_baseline: false
            columns:
            - age
          columns:
          - id: age
            name: Age
            group: Inputs
            data_type: integer
          - id: output
            name: Output
            group: Predictions
            data_type: float
          - id: custom_feature_1
            name: Custom Feature 1
            group: Metadata
            data_type: custom feature
          - id: __ANY__
            name: All Columns
          metric_types:
          - key: performance
            name: Performance
          - key: drift
            name: Data Drift
          - key: data_integrity
            name: Data Integrity
          - key: service_metrics
            name: Traffic
          - key: statistic
            name: Statistic
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
tags:
- name: traces-spans-v3
  description: CRUD APIs for Traces and Spans
- name: segments-v3
- name: access-key-v3
  description: CRD for access keys
- name: ingestion-v3
- name: environment-v3
  description: Endpoints related to environment management
- name: jobs-v3
- name: team-v3
- name: configuration-v3
  description: CRUD for configurations
- name: dimensionality-reduction-v3
- name: team-roles-v3
- name: custom-metrics-v3
- name: baseline-v3
  description: CRUD for baseline
- name: access-key
  description: CRD for access keys
- name: metrics-v3
  description: Metrics endpoints
- name: version-compatibility-v3
- name: alert-rules-v3
  description: CRUD for Alert Rules, Summary, and Stats APIs
- name: file-upload
  description: Endpoints related to file uploading.
- name: monitoring-summary-v3
- name: histograms-v3
- name: explainability-v3
- name: model-v3
- name: dashboard-v3
- name: server-info-v3
  description: Endpoints related to retrieving server information
- name: model-deployment-v3
- name: chart-v3
  description: CRUD for chart
- name: queries-v3
  description: v3 queries API
- name: project-v3
